a:8:{s:5:"token";s:6:"5dfe4e";s:6:"parent";N;s:8:"children";a:0:{}s:4:"data";a:11:{s:6:"config";C:62:"Symfony\Component\HttpKernel\DataCollector\ConfigDataCollector":2269:{a:16:{s:8:"app_name";N;s:11:"app_version";N;s:5:"token";s:6:"5dfe4e";s:15:"symfony_version";s:6:"2.3.42";s:4:"name";s:3:"app";s:3:"env";s:3:"dev";s:5:"debug";b:1;s:11:"php_version";s:6:"5.4.12";s:14:"xdebug_enabled";b:1;s:14:"eaccel_enabled";b:0;s:11:"apc_enabled";b:0;s:14:"xcache_enabled";b:0;s:16:"wincache_enabled";b:0;s:20:"zend_opcache_enabled";b:0;s:7:"bundles";a:20:{s:15:"FrameworkBundle";s:75:"C:\wamp\www\QCMV2\vendor\symfony\symfony\src\Symfony\Bundle\FrameworkBundle";s:14:"SecurityBundle";s:74:"C:\wamp\www\QCMV2\vendor\symfony\symfony\src\Symfony\Bundle\SecurityBundle";s:10:"TwigBundle";s:70:"C:\wamp\www\QCMV2\vendor\symfony\symfony\src\Symfony\Bundle\TwigBundle";s:13:"MonologBundle";s:76:"C:\wamp\www\QCMV2\vendor\symfony\monolog-bundle\Symfony\Bundle\MonologBundle";s:17:"SwiftmailerBundle";s:51:"C:\wamp\www\QCMV2\vendor\symfony\swiftmailer-bundle";s:13:"AsseticBundle";s:76:"C:\wamp\www\QCMV2\vendor\symfony\assetic-bundle\Symfony\Bundle\AsseticBundle";s:14:"DoctrineBundle";s:80:"C:\wamp\www\QCMV2\vendor\doctrine\doctrine-bundle\Doctrine\Bundle\DoctrineBundle";s:26:"SensioFrameworkExtraBundle";s:54:"C:\wamp\www\QCMV2\vendor\sensio\framework-extra-bundle";s:9:"QcmBundle";s:35:"C:\wamp\www\QCMV2\src\Qcm\QcmBundle";s:18:"FOSJsRoutingBundle";s:58:"C:\wamp\www\QCMV2\vendor\friendsofsymfony\jsrouting-bundle";s:13:"FOSUserBundle";s:53:"C:\wamp\www\QCMV2\vendor\friendsofsymfony\user-bundle";s:18:"UtilisateursBundle";s:53:"C:\wamp\www\QCMV2\src\Utilisateurs\UtilisateursBundle";s:13:"FOSRestBundle";s:68:"C:\wamp\www\QCMV2\vendor\friendsofsymfony\rest-bundle\FOS\RestBundle";s:19:"JMSSerializerBundle";s:46:"C:\wamp\www\QCMV2\vendor\jms\serializer-bundle";s:9:"DexBundle";s:35:"C:\wamp\www\QCMV2\src\Dex\DexBundle";s:16:"NelmioCorsBundle";s:43:"C:\wamp\www\QCMV2\vendor\nelmio\cors-bundle";s:14:"AcmeDemoBundle";s:37:"C:\wamp\www\QCMV2\src\Acme\DemoBundle";s:17:"WebProfilerBundle";s:77:"C:\wamp\www\QCMV2\vendor\symfony\symfony\src\Symfony\Bundle\WebProfilerBundle";s:24:"SensioDistributionBundle";s:84:"C:\wamp\www\QCMV2\vendor\sensio\distribution-bundle\Sensio\Bundle\DistributionBundle";s:21:"SensioGeneratorBundle";s:78:"C:\wamp\www\QCMV2\vendor\sensio\generator-bundle\Sensio\Bundle\GeneratorBundle";}s:9:"sapi_name";s:14:"apache2handler";}}s:7:"request";C:63:"Symfony\Component\HttpKernel\DataCollector\RequestDataCollector":18880:{a:18:{s:6:"format";s:4:"html";s:7:"content";s:0:"";s:12:"content_type";s:24:"text/html; charset=UTF-8";s:11:"status_text";s:21:"Internal Server Error";s:11:"status_code";i:500;s:13:"request_query";a:0:{}s:15:"request_request";a:0:{}s:15:"request_headers";a:11:{s:4:"host";a:1:{i:0;s:14:"localhost:8900";}s:10:"connection";a:1:{i:0;s:10:"keep-alive";}s:13:"cache-control";a:1:{i:0;s:9:"max-age=0";}s:25:"upgrade-insecure-requests";a:1:{i:0;s:1:"1";}s:10:"user-agent";a:1:{i:0;s:109:"Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36";}s:6:"accept";a:1:{i:0;s:85:"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8";}s:7:"referer";a:1:{i:0;s:49:"http://localhost:8900/QCMV2/web/app_dev.php/login";}s:15:"accept-encoding";a:1:{i:0;s:17:"gzip, deflate, br";}s:15:"accept-language";a:1:{i:0;s:23:"en-US,en;q=0.8,fr;q=0.6";}s:6:"cookie";a:1:{i:0;s:55:"__lnkrntdmcvrd=-1; PHPSESSID=encsat0jgc4bnr95u2a0bnomq4";}s:14:"x-php-ob-level";a:1:{i:0;i:1;}}s:14:"request_server";a:39:{s:9:"HTTP_HOST";s:14:"localhost:8900";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:18:"HTTP_CACHE_CONTROL";s:9:"max-age=0";s:30:"HTTP_UPGRADE_INSECURE_REQUESTS";s:1:"1";s:15:"HTTP_USER_AGENT";s:109:"Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36";s:11:"HTTP_ACCEPT";s:85:"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8";s:12:"HTTP_REFERER";s:49:"http://localhost:8900/QCMV2/web/app_dev.php/login";s:20:"HTTP_ACCEPT_ENCODING";s:17:"gzip, deflate, br";s:20:"HTTP_ACCEPT_LANGUAGE";s:23:"en-US,en;q=0.8,fr;q=0.6";s:11:"HTTP_COOKIE";s:55:"__lnkrntdmcvrd=-1; PHPSESSID=encsat0jgc4bnr95u2a0bnomq4";s:4:"PATH";s:400:"C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\7-Zip;C:\Program Files\nodejs\;C:\Program Files (x86)\Skype\Phone\;C:\Windows\system32\config\systemprofile\.dnx\bin;C:\Program Files\Microsoft DNX\Dnvm\;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk1.8.0_92\jre\bin;C:\wamp\bin\php\php5.4.12;";s:10:"SystemRoot";s:10:"C:\Windows";s:7:"COMSPEC";s:27:"C:\Windows\system32\cmd.exe";s:7:"PATHEXT";s:53:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC";s:6:"WINDIR";s:10:"C:\Windows";s:16:"SERVER_SIGNATURE";s:0:"";s:15:"SERVER_SOFTWARE";s:31:"Apache/2.4.4 (Win64) PHP/5.4.12";s:11:"SERVER_NAME";s:9:"localhost";s:11:"SERVER_ADDR";s:3:"::1";s:11:"SERVER_PORT";s:4:"8900";s:11:"REMOTE_ADDR";s:3:"::1";s:13:"DOCUMENT_ROOT";s:11:"C:/wamp/www";s:14:"REQUEST_SCHEME";s:4:"http";s:14:"CONTEXT_PREFIX";s:0:"";s:21:"CONTEXT_DOCUMENT_ROOT";s:11:"C:/wamp/www";s:12:"SERVER_ADMIN";s:17:"admin@example.com";s:15:"SCRIPT_FILENAME";s:33:"C:/wamp/www/QCMV2/web/app_dev.php";s:11:"REMOTE_PORT";s:5:"55311";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:14:"REQUEST_METHOD";s:3:"GET";s:12:"QUERY_STRING";s:0:"";s:11:"REQUEST_URI";s:39:"/QCMV2/web/app_dev.php/admin/dashboard/";s:11:"SCRIPT_NAME";s:22:"/QCMV2/web/app_dev.php";s:9:"PATH_INFO";s:17:"/admin/dashboard/";s:15:"PATH_TRANSLATED";s:28:"C:\wamp\www\admin\dashboard\";s:8:"PHP_SELF";s:39:"/QCMV2/web/app_dev.php/admin/dashboard/";s:18:"REQUEST_TIME_FLOAT";d:1508325702.664000034332275390625;s:12:"REQUEST_TIME";i:1508325702;}s:15:"request_cookies";a:2:{s:14:"__lnkrntdmcvrd";s:2:"-1";s:9:"PHPSESSID";s:26:"encsat0jgc4bnr95u2a0bnomq4";}s:18:"request_attributes";a:0:{}s:16:"response_headers";a:5:{s:13:"cache-control";a:1:{i:0;s:8:"no-cache";}s:4:"date";a:1:{i:0;s:29:"Wed, 18 Oct 2017 11:21:46 GMT";}s:13:"x-debug-token";a:1:{i:0;s:6:"5dfe4e";}s:19:"x-chromelogger-data";a:1:{i:0;s:14896:"";}s:12:"content-type";a:1:{i:0;s:24:"text/html; charset=UTF-8";}}s:16:"session_metadata";a:0:{}s:18:"session_attributes";a:0:{}s:7:"flashes";a:0:{}s:9:"path_info";s:17:"/admin/dashboard/";s:10:"controller";s:3:"n/a";s:6:"locale";s:2:"en";}}s:9:"exception";C:65:"Symfony\Component\HttpKernel\DataCollector\ExceptionDataCollector":92421:{a:1:{s:9:"exception";O:50:"Symfony\Component\Debug\Exception\FlattenException":10:{s:59:" Symfony\Component\Debug\Exception\FlattenException message";s:118:"Cannot rename "C:\wamp\www\QCMV2\app\cache\dev\appADF6.tmp" to "C:\wamp\www\QCMV2\app\cache\dev/appDevUrlMatcher.php".";s:56:" Symfony\Component\Debug\Exception\FlattenException code";i:0;s:60:" Symfony\Component\Debug\Exception\FlattenException previous";N;s:57:" Symfony\Component\Debug\Exception\FlattenException trace";a:17:{i:0;a:8:{s:9:"namespace";s:0:"";s:11:"short_class";s:0:"";s:5:"class";s:0:"";s:4:"type";s:0:"";s:8:"function";s:0:"";s:4:"file";s:88:"C:\wamp\www\QCMV2\vendor\symfony\symfony\src\Symfony\Component\Filesystem\Filesystem.php";s:4:"line";i:264;s:4:"args";a:0:{}}i:1;a:8:{s:9:"namespace";s:28:"Symfony\Component\Filesystem";s:11:"short_class";s:10:"Filesystem";s:5:"class";s:39:"Symfony\Component\Filesystem\Filesystem";s:4:"type";s:2:"->";s:8:"function";s:6:"rename";s:4:"file";s:88:"C:\wamp\www\QCMV2\vendor\symfony\symfony\src\Symfony\Component\Filesystem\Filesystem.php";s:4:"line";i:507;s:4:"args";a:3:{i:0;a:2:{i:0;s:6:"string";i:1;s:43:"C:\wamp\www\QCMV2\app\cache\dev\appADF6.tmp";}i:1;a:2:{i:0;s:6:"string";i:1;s:52:"C:\wamp\www\QCMV2\app\cache\dev/appDevUrlMatcher.php";}i:2;a:2:{i:0;s:7:"boolean";i:1;b:1;}}}i:2;a:8:{s:9:"namespace";s:28:"Symfony\Component\Filesystem";s:11:"short_class";s:10:"Filesystem";s:5:"class";s:39:"Symfony\Component\Filesystem\Filesystem";s:4:"type";s:2:"->";s:8:"function";s:8:"dumpFile";s:4:"file";s:41:"C:\wamp\www\QCMV2\app\bootstrap.php.cache";s:4:"line";i:2907;s:4:"args";a:3:{i:0;a:2:{i:0;s:6:"string";i:1;s:52:"C:\wamp\www\QCMV2\app\cache\dev/appDevUrlMatcher.php";}i:1;a:2:{i:0;s:6:"string";i:1;s:40603:"<?php

use Symfony\Component\Routing\Exception\MethodNotAllowedException;
use Symfony\Component\Routing\Exception\ResourceNotFoundException;
use Symfony\Component\Routing\RequestContext;

/**
 * appDevUrlMatcher.
 *
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appDevUrlMatcher extends Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher
{
    /**
     * Constructor.
     */
    public function __construct(RequestContext $context)
    {
        $this->context = $context;
    }

    public function match($pathinfo)
    {
        $allow = array();
        $pathinfo = rawurldecode($pathinfo);

        if (0 === strpos($pathinfo, '/_')) {
            // _wdt
            if (0 === strpos($pathinfo, '/_wdt') && preg_match('#^/_wdt/(?P<token>[^/]++)$#s', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => '_wdt')), array (  '_controller' => 'web_profiler.controller.profiler:toolbarAction',));
            }

            if (0 === strpos($pathinfo, '/_profiler')) {
                // _profiler_home
                if (rtrim($pathinfo, '/') === '/_profiler') {
                    if (substr($pathinfo, -1) !== '/') {
                        return $this->redirect($pathinfo.'/', '_profiler_home');
                    }

                    return array (  '_controller' => 'web_profiler.controller.profiler:homeAction',  '_route' => '_profiler_home',);
                }

                if (0 === strpos($pathinfo, '/_profiler/search')) {
                    // _profiler_search
                    if ($pathinfo === '/_profiler/search') {
                        return array (  '_controller' => 'web_profiler.controller.profiler:searchAction',  '_route' => '_profiler_search',);
                    }

                    // _profiler_search_bar
                    if ($pathinfo === '/_profiler/search_bar') {
                        return array (  '_controller' => 'web_profiler.controller.profiler:searchBarAction',  '_route' => '_profiler_search_bar',);
                    }

                }

                // _profiler_purge
                if ($pathinfo === '/_profiler/purge') {
                    return array (  '_controller' => 'web_profiler.controller.profiler:purgeAction',  '_route' => '_profiler_purge',);
                }

                // _profiler_info
                if (0 === strpos($pathinfo, '/_profiler/info') && preg_match('#^/_profiler/info/(?P<about>[^/]++)$#s', $pathinfo, $matches)) {
                    return $this->mergeDefaults(array_replace($matches, array('_route' => '_profiler_info')), array (  '_controller' => 'web_profiler.controller.profiler:infoAction',));
                }

                // _profiler_phpinfo
                if ($pathinfo === '/_profiler/phpinfo') {
                    return array (  '_controller' => 'web_profiler.controller.profiler:phpinfoAction',  '_route' => '_profiler_phpinfo',);
                }

                // _profiler_search_results
                if (preg_match('#^/_profiler/(?P<token>[^/]++)/search/results$#s', $pathinfo, $matches)) {
                    return $this->mergeDefaults(array_replace($matches, array('_route' => '_profiler_search_results')), array (  '_controller' => 'web_profiler.controller.profiler:searchResultsAction',));
                }

                // _profiler
                if (preg_match('#^/_profiler/(?P<token>[^/]++)$#s', $pathinfo, $matches)) {
                    return $this->mergeDefaults(array_replace($matches, array('_route' => '_profiler')), array (  '_controller' => 'web_profiler.controller.profiler:panelAction',));
                }

                // _profiler_router
                if (preg_match('#^/_profiler/(?P<token>[^/]++)/router$#s', $pathinfo, $matches)) {
                    return $this->mergeDefaults(array_replace($matches, array('_route' => '_profiler_router')), array (  '_controller' => 'web_profiler.controller.router:panelAction',));
                }

                // _profiler_exception
                if (preg_match('#^/_profiler/(?P<token>[^/]++)/exception$#s', $pathinfo, $matches)) {
                    return $this->mergeDefaults(array_replace($matches, array('_route' => '_profiler_exception')), array (  '_controller' => 'web_profiler.controller.exception:showAction',));
                }

                // _profiler_exception_css
                if (preg_match('#^/_profiler/(?P<token>[^/]++)/exception\\.css$#s', $pathinfo, $matches)) {
                    return $this->mergeDefaults(array_replace($matches, array('_route' => '_profiler_exception_css')), array (  '_controller' => 'web_profiler.controller.exception:cssAction',));
                }

            }

            if (0 === strpos($pathinfo, '/_configurator')) {
                // _configurator_home
                if (rtrim($pathinfo, '/') === '/_configurator') {
                    if (substr($pathinfo, -1) !== '/') {
                        return $this->redirect($pathinfo.'/', '_configurator_home');
                    }

                    return array (  '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::checkAction',  '_route' => '_configurator_home',);
                }

                // _configurator_step
                if (0 === strpos($pathinfo, '/_configurator/step') && preg_match('#^/_configurator/step/(?P<index>[^/]++)$#s', $pathinfo, $matches)) {
                    return $this->mergeDefaults(array_replace($matches, array('_route' => '_configurator_step')), array (  '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::stepAction',));
                }

                // _configurator_final
                if ($pathinfo === '/_configurator/final') {
                    return array (  '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::finalAction',  '_route' => '_configurator_final',);
                }

            }

        }

        // dex_homepage
        if (0 === strpos($pathinfo, '/hello') && preg_match('#^/hello/(?P<name>[^/]++)$#s', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'dex_homepage')), array (  '_controller' => 'Dex\\DexBundle\\Controller\\DefaultController::indexAction',));
        }

        if (0 === strpos($pathinfo, '/log')) {
            if (0 === strpos($pathinfo, '/login')) {
                // fos_user_security_login
                if ($pathinfo === '/login') {
                    if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                        $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                        goto not_fos_user_security_login;
                    }

                    return array (  '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::loginAction',  '_route' => 'fos_user_security_login',);
                }
                not_fos_user_security_login:

                // fos_user_security_check
                if ($pathinfo === '/login_check') {
                    if ($this->context->getMethod() != 'POST') {
                        $allow[] = 'POST';
                        goto not_fos_user_security_check;
                    }

                    return array (  '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::checkAction',  '_route' => 'fos_user_security_check',);
                }
                not_fos_user_security_check:

            }

            // fos_user_security_logout
            if ($pathinfo === '/logout') {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_fos_user_security_logout;
                }

                return array (  '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::logoutAction',  '_route' => 'fos_user_security_logout',);
            }
            not_fos_user_security_logout:

        }

        if (0 === strpos($pathinfo, '/profile')) {
            // fos_user_profile_show
            if (rtrim($pathinfo, '/') === '/profile') {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_fos_user_profile_show;
                }

                if (substr($pathinfo, -1) !== '/') {
                    return $this->redirect($pathinfo.'/', 'fos_user_profile_show');
                }

                return array (  '_controller' => 'FOS\\UserBundle\\Controller\\ProfileController::showAction',  '_route' => 'fos_user_profile_show',);
            }
            not_fos_user_profile_show:

            // fos_user_profile_edit
            if ($pathinfo === '/profile/edit') {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_fos_user_profile_edit;
                }

                return array (  '_controller' => 'FOS\\UserBundle\\Controller\\ProfileController::editAction',  '_route' => 'fos_user_profile_edit',);
            }
            not_fos_user_profile_edit:

        }

        if (0 === strpos($pathinfo, '/re')) {
            if (0 === strpos($pathinfo, '/register')) {
                // fos_user_registration_register
                if (rtrim($pathinfo, '/') === '/register') {
                    if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                        $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                        goto not_fos_user_registration_register;
                    }

                    if (substr($pathinfo, -1) !== '/') {
                        return $this->redirect($pathinfo.'/', 'fos_user_registration_register');
                    }

                    return array (  '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::registerAction',  '_route' => 'fos_user_registration_register',);
                }
                not_fos_user_registration_register:

                if (0 === strpos($pathinfo, '/register/c')) {
                    // fos_user_registration_check_email
                    if ($pathinfo === '/register/check-email') {
                        if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                            $allow = array_merge($allow, array('GET', 'HEAD'));
                            goto not_fos_user_registration_check_email;
                        }

                        return array (  '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::checkEmailAction',  '_route' => 'fos_user_registration_check_email',);
                    }
                    not_fos_user_registration_check_email:

                    if (0 === strpos($pathinfo, '/register/confirm')) {
                        // fos_user_registration_confirm
                        if (preg_match('#^/register/confirm/(?P<token>[^/]++)$#s', $pathinfo, $matches)) {
                            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                                $allow = array_merge($allow, array('GET', 'HEAD'));
                                goto not_fos_user_registration_confirm;
                            }

                            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fos_user_registration_confirm')), array (  '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::confirmAction',));
                        }
                        not_fos_user_registration_confirm:

                        // fos_user_registration_confirmed
                        if ($pathinfo === '/register/confirmed') {
                            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                                $allow = array_merge($allow, array('GET', 'HEAD'));
                                goto not_fos_user_registration_confirmed;
                            }

                            return array (  '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::confirmedAction',  '_route' => 'fos_user_registration_confirmed',);
                        }
                        not_fos_user_registration_confirmed:

                    }

                }

            }

            if (0 === strpos($pathinfo, '/resetting')) {
                // fos_user_resetting_request
                if ($pathinfo === '/resetting/request') {
                    if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                        $allow = array_merge($allow, array('GET', 'HEAD'));
                        goto not_fos_user_resetting_request;
                    }

                    return array (  '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::requestAction',  '_route' => 'fos_user_resetting_request',);
                }
                not_fos_user_resetting_request:

                // fos_user_resetting_send_email
                if ($pathinfo === '/resetting/send-email') {
                    if ($this->context->getMethod() != 'POST') {
                        $allow[] = 'POST';
                        goto not_fos_user_resetting_send_email;
                    }

                    return array (  '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::sendEmailAction',  '_route' => 'fos_user_resetting_send_email',);
                }
                not_fos_user_resetting_send_email:

                // fos_user_resetting_check_email
                if ($pathinfo === '/resetting/check-email') {
                    if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                        $allow = array_merge($allow, array('GET', 'HEAD'));
                        goto not_fos_user_resetting_check_email;
                    }

                    return array (  '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::checkEmailAction',  '_route' => 'fos_user_resetting_check_email',);
                }
                not_fos_user_resetting_check_email:

                // fos_user_resetting_reset
                if (0 === strpos($pathinfo, '/resetting/reset') && preg_match('#^/resetting/reset/(?P<token>[^/]++)$#s', $pathinfo, $matches)) {
                    if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                        $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                        goto not_fos_user_resetting_reset;
                    }

                    return $this->mergeDefaults(array_replace($matches, array('_route' => 'fos_user_resetting_reset')), array (  '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::resetAction',));
                }
                not_fos_user_resetting_reset:

            }

        }

        // fos_user_change_password
        if ($pathinfo === '/profile/change-password') {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fos_user_change_password;
            }

            return array (  '_controller' => 'FOS\\UserBundle\\Controller\\ChangePasswordController::changePasswordAction',  '_route' => 'fos_user_change_password',);
        }
        not_fos_user_change_password:

        if (0 === strpos($pathinfo, '/a')) {
            // qcm_homepage
            if ($pathinfo === '/accueil') {
                return array (  '_controller' => 'Qcm\\QcmBundle\\Controller\\DefaultController::indexAction',  '_route' => 'qcm_homepage',);
            }

            if (0 === strpos($pathinfo, '/admin')) {
                if (0 === strpos($pathinfo, '/admin/question')) {
                    // question
                    if (rtrim($pathinfo, '/') === '/admin/question') {
                        if (substr($pathinfo, -1) !== '/') {
                            return $this->redirect($pathinfo.'/', 'question');
                        }

                        return array (  '_controller' => 'Qcm\\QcmBundle\\Controller\\QuestionController::indexAction',  '_route' => 'question',);
                    }

                    // question_show
                    if (preg_match('#^/admin/question/(?P<id>[^/]++)/show$#s', $pathinfo, $matches)) {
                        return $this->mergeDefaults(array_replace($matches, array('_route' => 'question_show')), array (  '_controller' => 'Qcm\\QcmBundle\\Controller\\QuestionController::showAction',));
                    }

                    // question_new
                    if ($pathinfo === '/admin/question/new') {
                        return array (  '_controller' => 'Qcm\\QcmBundle\\Controller\\QuestionController::newAction',  '_route' => 'question_new',);
                    }

                    // question_create
                    if ($pathinfo === '/admin/question/create') {
                        if ($this->context->getMethod() != 'POST') {
                            $allow[] = 'POST';
                            goto not_question_create;
                        }

                        return array (  '_controller' => 'Qcm\\QcmBundle\\Controller\\QuestionController::createAction',  '_route' => 'question_create',);
                    }
                    not_question_create:

                    // question_edit
                    if (preg_match('#^/admin/question/(?P<id>[^/]++)/edit$#s', $pathinfo, $matches)) {
                        return $this->mergeDefaults(array_replace($matches, array('_route' => 'question_edit')), array (  '_controller' => 'Qcm\\QcmBundle\\Controller\\QuestionController::editAction',));
                    }

                    // question_update
                    if (preg_match('#^/admin/question/(?P<id>[^/]++)/update$#s', $pathinfo, $matches)) {
                        if (!in_array($this->context->getMethod(), array('POST', 'PUT'))) {
                            $allow = array_merge($allow, array('POST', 'PUT'));
                            goto not_question_update;
                        }

                        return $this->mergeDefaults(array_replace($matches, array('_route' => 'question_update')), array (  '_controller' => 'Qcm\\QcmBundle\\Controller\\QuestionController::updateAction',));
                    }
                    not_question_update:

                    // question_delete
                    if (preg_match('#^/admin/question/(?P<id>[^/]++)/delete$#s', $pathinfo, $matches)) {
                        if (!in_array($this->context->getMethod(), array('POST', 'DELETE'))) {
                            $allow = array_merge($allow, array('POST', 'DELETE'));
                            goto not_question_delete;
                        }

                        return $this->mergeDefaults(array_replace($matches, array('_route' => 'question_delete')), array (  '_controller' => 'Qcm\\QcmBundle\\Controller\\QuestionController::deleteAction',));
                    }
                    not_question_delete:

                }

                if (0 === strpos($pathinfo, '/admin/reponse')) {
                    // reponse
                    if (rtrim($pathinfo, '/') === '/admin/reponse') {
                        if (substr($pathinfo, -1) !== '/') {
                            return $this->redirect($pathinfo.'/', 'reponse');
                        }

                        return array (  '_controller' => 'Qcm\\QcmBundle\\Controller\\ReponseController::indexAction',  '_route' => 'reponse',);
                    }

                    // reponse_show
                    if (preg_match('#^/admin/reponse/(?P<id>[^/]++)/show$#s', $pathinfo, $matches)) {
                        return $this->mergeDefaults(array_replace($matches, array('_route' => 'reponse_show')), array (  '_controller' => 'Qcm\\QcmBundle\\Controller\\ReponseController::showAction',));
                    }

                    // reponse_new
                    if ($pathinfo === '/admin/reponse/new') {
                        return array (  '_controller' => 'Qcm\\QcmBundle\\Controller\\ReponseController::newAction',  '_route' => 'reponse_new',);
                    }

                    // reponse_create
                    if ($pathinfo === '/admin/reponse/create') {
                        if ($this->context->getMethod() != 'POST') {
                            $allow[] = 'POST';
                            goto not_reponse_create;
                        }

                        return array (  '_controller' => 'Qcm\\QcmBundle\\Controller\\ReponseController::createAction',  '_route' => 'reponse_create',);
                    }
                    not_reponse_create:

                    // reponse_edit
                    if (preg_match('#^/admin/reponse/(?P<id>[^/]++)/edit$#s', $pathinfo, $matches)) {
                        return $this->mergeDefaults(array_replace($matches, array('_route' => 'reponse_edit')), array (  '_controller' => 'Qcm\\QcmBundle\\Controller\\ReponseController::editAction',));
                    }

                    // reponse_update
                    if (preg_match('#^/admin/reponse/(?P<id>[^/]++)/update$#s', $pathinfo, $matches)) {
                        if (!in_array($this->context->getMethod(), array('POST', 'PUT'))) {
                            $allow = array_merge($allow, array('POST', 'PUT'));
                            goto not_reponse_update;
                        }

                        return $this->mergeDefaults(array_replace($matches, array('_route' => 'reponse_update')), array (  '_controller' => 'Qcm\\QcmBundle\\Controller\\ReponseController::updateAction',));
                    }
                    not_reponse_update:

                    // reponse_delete
                    if (preg_match('#^/admin/reponse/(?P<id>[^/]++)/delete$#s', $pathinfo, $matches)) {
                        if (!in_array($this->context->getMethod(), array('POST', 'DELETE'))) {
                            $allow = array_merge($allow, array('POST', 'DELETE'));
                            goto not_reponse_delete;
                        }

                        return $this->mergeDefaults(array_replace($matches, array('_route' => 'reponse_delete')), array (  '_controller' => 'Qcm\\QcmBundle\\Controller\\ReponseController::deleteAction',));
                    }
                    not_reponse_delete:

                }

                if (0 === strpos($pathinfo, '/admin/dashboard')) {
                    // reponseexacte
                    if (rtrim($pathinfo, '/') === '/admin/dashboard') {
                        if (substr($pathinfo, -1) !== '/') {
                            return $this->redirect($pathinfo.'/', 'reponseexacte');
                        }

                        return array (  '_controller' => 'Qcm\\QcmBundle\\Controller\\ReponseExacteController::indexAction',  '_route' => 'reponseexacte',);
                    }

                    // reponseexacte_show
                    if (preg_match('#^/admin/dashboard/(?P<id>[^/]++)/show$#s', $pathinfo, $matches)) {
                        return $this->mergeDefaults(array_replace($matches, array('_route' => 'reponseexacte_show')), array (  '_controller' => 'Qcm\\QcmBundle\\Controller\\ReponseExacteController::showAction',));
                    }

                    // reponseexacte_new
                    if ($pathinfo === '/admin/dashboard/new') {
                        return array (  '_controller' => 'Qcm\\QcmBundle\\Controller\\ReponseExacteController::newAction',  '_route' => 'reponseexacte_new',);
                    }

                    // reponseexacte_create
                    if ($pathinfo === '/admin/dashboard/create') {
                        if ($this->context->getMethod() != 'POST') {
                            $allow[] = 'POST';
                            goto not_reponseexacte_create;
                        }

                        return array (  '_controller' => 'Qcm\\QcmBundle\\Controller\\ReponseExacteController::createAction',  '_route' => 'reponseexacte_create',);
                    }
                    not_reponseexacte_create:

                    // reponseexacte_edit
                    if (preg_match('#^/admin/dashboard/(?P<id>[^/]++)/edit$#s', $pathinfo, $matches)) {
                        return $this->mergeDefaults(array_replace($matches, array('_route' => 'reponseexacte_edit')), array (  '_controller' => 'Qcm\\QcmBundle\\Controller\\ReponseExacteController::editAction',));
                    }

                    // reponseexacte_update
                    if (preg_match('#^/admin/dashboard/(?P<id>[^/]++)/update$#s', $pathinfo, $matches)) {
                        if (!in_array($this->context->getMethod(), array('POST', 'PUT'))) {
                            $allow = array_merge($allow, array('POST', 'PUT'));
                            goto not_reponseexacte_update;
                        }

                        return $this->mergeDefaults(array_replace($matches, array('_route' => 'reponseexacte_update')), array (  '_controller' => 'Qcm\\QcmBundle\\Controller\\ReponseExacteController::updateAction',));
                    }
                    not_reponseexacte_update:

                    // reponseexacte_delete
                    if (preg_match('#^/admin/dashboard/(?P<id>[^/]++)/delete$#s', $pathinfo, $matches)) {
                        if (!in_array($this->context->getMethod(), array('POST', 'DELETE'))) {
                            $allow = array_merge($allow, array('POST', 'DELETE'));
                            goto not_reponseexacte_delete;
                        }

                        return $this->mergeDefaults(array_replace($matches, array('_route' => 'reponseexacte_delete')), array (  '_controller' => 'Qcm\\QcmBundle\\Controller\\ReponseExacteController::deleteAction',));
                    }
                    not_reponseexacte_delete:

                }

            }

        }

        if (0 === strpos($pathinfo, '/r')) {
            // qcm_getresponse
            if ($pathinfo === '/reponse') {
                return array (  '_controller' => 'Qcm\\QcmBundle\\Controller\\DefaultController::reponseAction',  '_route' => 'qcm_getresponse',);
            }

            // qcm_jsrouting
            if ($pathinfo === '/route') {
                return array (  '_controller' => 'Qcm\\QcmBundle\\Controller\\AjaxController::indexAction',  '_route' => 'qcm_jsrouting',);
            }

        }

        // qcm_webservice
        if (0 === strpos($pathinfo, '/questionParCategorie') && preg_match('#^/questionParCategorie/(?P<idCategorie>[^/]++)$#s', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_qcm_webservice;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'qcm_webservice')), array (  '_controller' => 'Qcm\\QcmBundle\\Controller\\DefaultController::WebServiceAction',  '_format' => 'json',  '_locale' => 'en',));
        }
        not_qcm_webservice:

        // fos_js_routing_js
        if (0 === strpos($pathinfo, '/js/routing') && preg_match('#^/js/routing(?:\\.(?P<_format>js|json))?$#s', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fos_js_routing_js;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fos_js_routing_js')), array (  '_controller' => 'fos_js_routing.controller:indexAction',  '_format' => 'js',));
        }
        not_fos_js_routing_js:

        if (0 === strpos($pathinfo, '/api')) {
            // api_get_user
            if (0 === strpos($pathinfo, '/api/users') && preg_match('#^/api/users/(?P<username>[^/\\.]++)(?:\\.(?P<_format>xml|json|html))?$#s', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_api_get_user;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'api_get_user')), array (  '_controller' => 'Dex\\DexBundle\\Controller\\UtilisateursRestController::getUserAction',  '_format' => 'json',));
            }
            not_api_get_user:

            // api_get_me
            if (0 === strpos($pathinfo, '/api/me') && preg_match('#^/api/me(?:\\.(?P<_format>xml|json|html))?$#s', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_api_get_me;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'api_get_me')), array (  '_controller' => 'Dex\\DexBundle\\Controller\\UtilisateursRestController::getMeAction',  '_format' => 'json',));
            }
            not_api_get_me:

            // api_get_all_question
            if (0 === strpos($pathinfo, '/api/all/question') && preg_match('#^/api/all/question(?:\\.(?P<_format>xml|json|html))?$#s', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_api_get_all_question;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'api_get_all_question')), array (  '_controller' => 'Dex\\DexBundle\\Controller\\UtilisateursRestController::getAllQuestionAction',  '_format' => 'json',));
            }
            not_api_get_all_question:

            if (0 === strpos($pathinfo, '/api/questions')) {
                // api_get_question_by_categorie
                if (preg_match('#^/api/questions/(?P<idCategorie>[^/]++)/by/categorie(?:\\.(?P<_format>xml|json|html))?$#s', $pathinfo, $matches)) {
                    if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                        $allow = array_merge($allow, array('GET', 'HEAD'));
                        goto not_api_get_question_by_categorie;
                    }

                    return $this->mergeDefaults(array_replace($matches, array('_route' => 'api_get_question_by_categorie')), array (  '_controller' => 'Dex\\DexBundle\\Controller\\UtilisateursRestController::getQuestionByCategorieAction',  '_format' => 'json',));
                }
                not_api_get_question_by_categorie:

                // api_get_question_by_categories
                if (preg_match('#^/api/questions/(?P<categorie>[^/]++)/by/categories(?:\\.(?P<_format>xml|json|html))?$#s', $pathinfo, $matches)) {
                    if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                        $allow = array_merge($allow, array('GET', 'HEAD'));
                        goto not_api_get_question_by_categories;
                    }

                    return $this->mergeDefaults(array_replace($matches, array('_route' => 'api_get_question_by_categories')), array (  '_controller' => 'Dex\\DexBundle\\Controller\\UtilisateursRestController::getQuestionByCategoriesAction',  '_format' => 'json',));
                }
                not_api_get_question_by_categories:

            }

            // api_get_all_categorie
            if (0 === strpos($pathinfo, '/api/all/categorie') && preg_match('#^/api/all/categorie(?:\\.(?P<_format>xml|json|html))?$#s', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_api_get_all_categorie;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'api_get_all_categorie')), array (  '_controller' => 'Dex\\DexBundle\\Controller\\UtilisateursRestController::getAllCategorieAction',  '_format' => 'json',));
            }
            not_api_get_all_categorie:

            if (0 === strpos($pathinfo, '/api/reponse')) {
                // api_get_reponse_exacte
                if (0 === strpos($pathinfo, '/api/reponse/exacte') && preg_match('#^/api/reponse/exacte(?:\\.(?P<_format>xml|json|html))?$#s', $pathinfo, $matches)) {
                    if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                        $allow = array_merge($allow, array('GET', 'HEAD'));
                        goto not_api_get_reponse_exacte;
                    }

                    return $this->mergeDefaults(array_replace($matches, array('_route' => 'api_get_reponse_exacte')), array (  '_controller' => 'Dex\\DexBundle\\Controller\\UtilisateursRestController::getReponseExacteAction',  '_format' => 'json',));
                }
                not_api_get_reponse_exacte:

                // api_get_reponse_par_question
                if (0 === strpos($pathinfo, '/api/reponses') && preg_match('#^/api/reponses/(?P<idQuestion>[^/]++)/par/question(?:\\.(?P<_format>xml|json|html))?$#s', $pathinfo, $matches)) {
                    if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                        $allow = array_merge($allow, array('GET', 'HEAD'));
                        goto not_api_get_reponse_par_question;
                    }

                    return $this->mergeDefaults(array_replace($matches, array('_route' => 'api_get_reponse_par_question')), array (  '_controller' => 'Dex\\DexBundle\\Controller\\UtilisateursRestController::getReponseParQuestionAction',  '_format' => 'json',));
                }
                not_api_get_reponse_par_question:

            }

            if (0 === strpos($pathinfo, '/api/all')) {
                // api_get_all_reponse
                if (0 === strpos($pathinfo, '/api/all/reponse') && preg_match('#^/api/all/reponse(?:\\.(?P<_format>xml|json|html))?$#s', $pathinfo, $matches)) {
                    if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                        $allow = array_merge($allow, array('GET', 'HEAD'));
                        goto not_api_get_all_reponse;
                    }

                    return $this->mergeDefaults(array_replace($matches, array('_route' => 'api_get_all_reponse')), array (  '_controller' => 'Dex\\DexBundle\\Controller\\UtilisateursRestController::getAllReponseAction',  '_format' => 'json',));
                }
                not_api_get_all_reponse:

                // api_get_all_utilisateur
                if (0 === strpos($pathinfo, '/api/all/utilisateur') && preg_match('#^/api/all/utilisateur(?:\\.(?P<_format>xml|json|html))?$#s', $pathinfo, $matches)) {
                    if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                        $allow = array_merge($allow, array('GET', 'HEAD'));
                        goto not_api_get_all_utilisateur;
                    }

                    return $this->mergeDefaults(array_replace($matches, array('_route' => 'api_get_all_utilisateur')), array (  '_controller' => 'Dex\\DexBundle\\Controller\\UtilisateursRestController::getAllUtilisateurAction',  '_format' => 'json',));
                }
                not_api_get_all_utilisateur:

            }

            // api_get_reponse_par_question_par_categorie
            if (0 === strpos($pathinfo, '/api/reponses') && preg_match('#^/api/reponses/(?P<categorie>[^/]++)/par/question/par/categorie(?:\\.(?P<_format>xml|json|html))?$#s', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_api_get_reponse_par_question_par_categorie;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'api_get_reponse_par_question_par_categorie')), array (  '_controller' => 'Dex\\DexBundle\\Controller\\UtilisateursRestController::getReponseParQuestionParCategorieAction',  '_format' => 'json',));
            }
            not_api_get_reponse_par_question_par_categorie:

        }

        // _welcome
        if (rtrim($pathinfo, '/') === '') {
            if (substr($pathinfo, -1) !== '/') {
                return $this->redirect($pathinfo.'/', '_welcome');
            }

            return array (  '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::loginAction',  '_route' => '_welcome',);
        }

        if (0 === strpos($pathinfo, '/demo')) {
            if (0 === strpos($pathinfo, '/demo/secured')) {
                if (0 === strpos($pathinfo, '/demo/secured/log')) {
                    if (0 === strpos($pathinfo, '/demo/secured/login')) {
                        // _demo_login
                        if ($pathinfo === '/demo/secured/login') {
                            return array (  '_controller' => 'Acme\\DemoBundle\\Controller\\SecuredController::loginAction',  '_route' => '_demo_login',);
                        }

                        // _security_check
                        if ($pathinfo === '/demo/secured/login_check') {
                            return array (  '_controller' => 'Acme\\DemoBundle\\Controller\\SecuredController::securityCheckAction',  '_route' => '_security_check',);
                        }

                    }

                    // _demo_logout
                    if ($pathinfo === '/demo/secured/logout') {
                        return array (  '_controller' => 'Acme\\DemoBundle\\Controller\\SecuredController::logoutAction',  '_route' => '_demo_logout',);
                    }

                }

                if (0 === strpos($pathinfo, '/demo/secured/hello')) {
                    // acme_demo_secured_hello
                    if ($pathinfo === '/demo/secured/hello') {
                        return array (  'name' => 'World',  '_controller' => 'Acme\\DemoBundle\\Controller\\SecuredController::helloAction',  '_route' => 'acme_demo_secured_hello',);
                    }

                    // _demo_secured_hello
                    if (preg_match('#^/demo/secured/hello/(?P<name>[^/]++)$#s', $pathinfo, $matches)) {
                        return $this->mergeDefaults(array_replace($matches, array('_route' => '_demo_secured_hello')), array (  '_controller' => 'Acme\\DemoBundle\\Controller\\SecuredController::helloAction',));
                    }

                    // _demo_secured_hello_admin
                    if (0 === strpos($pathinfo, '/demo/secured/hello/admin') && preg_match('#^/demo/secured/hello/admin/(?P<name>[^/]++)$#s', $pathinfo, $matches)) {
                        return $this->mergeDefaults(array_replace($matches, array('_route' => '_demo_secured_hello_admin')), array (  '_controller' => 'Acme\\DemoBundle\\Controller\\SecuredController::helloadminAction',));
                    }

                }

            }

            // _demo
            if (rtrim($pathinfo, '/') === '/demo') {
                if (substr($pathinfo, -1) !== '/') {
                    return $this->redirect($pathinfo.'/', '_demo');
                }

                return array (  '_controller' => 'Acme\\DemoBundle\\Controller\\DemoController::indexAction',  '_route' => '_demo',);
            }

            // _demo_hello
            if (0 === strpos($pathinfo, '/demo/hello') && preg_match('#^/demo/hello/(?P<name>[^/]++)$#s', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => '_demo_hello')), array (  '_controller' => 'Acme\\DemoBundle\\Controller\\DemoController::helloAction',));
            }

            // _demo_contact
            if ($pathinfo === '/demo/contact') {
                return array (  '_controller' => 'Acme\\DemoBundle\\Controller\\DemoController::contactAction',  '_route' => '_demo_contact',);
            }

        }

        throw 0 < count($allow) ? new MethodNotAllowedException(array_unique($allow)) : new ResourceNotFoundException();
    }
}
";}i:2;a:2:{i:0;s:4:"null";i:1;N;}}}i:3;a:8:{s:9:"namespace";s:24:"Symfony\Component\Config";s:11:"short_class";s:11:"ConfigCache";s:5:"class";s:36:"Symfony\Component\Config\ConfigCache";s:4:"type";s:2:"->";s:8:"function";s:5:"write";s:4:"file";s:43:"C:\wamp\www\QCMV2\app\cache\dev\classes.php";s:4:"line";i:1243;s:4:"args";a:2:{i:0;a:2:{i:0;s:6:"string";i:1;s:40603:"<?php

use Symfony\Component\Routing\Exception\MethodNotAllowedException;
use Symfony\Component\Routing\Exception\ResourceNotFoundException;
use Symfony\Component\Routing\RequestContext;

/**
 * appDevUrlMatcher.
 *
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appDevUrlMatcher extends Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher
{
    /**
     * Constructor.
     */
    public function __construct(RequestContext $context)
    {
        $this->context = $context;
    }

    public function match($pathinfo)
    {
        $allow = array();
        $pathinfo = rawurldecode($pathinfo);

        if (0 === strpos($pathinfo, '/_')) {
            // _wdt
            if (0 === strpos($pathinfo, '/_wdt') && preg_match('#^/_wdt/(?P<token>[^/]++)$#s', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => '_wdt')), array (  '_controller' => 'web_profiler.controller.profiler:toolbarAction',));
            }

            if (0 === strpos($pathinfo, '/_profiler')) {
                // _profiler_home
                if (rtrim($pathinfo, '/') === '/_profiler') {
                    if (substr($pathinfo, -1) !== '/') {
                        return $this->redirect($pathinfo.'/', '_profiler_home');
                    }

                    return array (  '_controller' => 'web_profiler.controller.profiler:homeAction',  '_route' => '_profiler_home',);
                }

                if (0 === strpos($pathinfo, '/_profiler/search')) {
                    // _profiler_search
                    if ($pathinfo === '/_profiler/search') {
                        return array (  '_controller' => 'web_profiler.controller.profiler:searchAction',  '_route' => '_profiler_search',);
                    }

                    // _profiler_search_bar
                    if ($pathinfo === '/_profiler/search_bar') {
                        return array (  '_controller' => 'web_profiler.controller.profiler:searchBarAction',  '_route' => '_profiler_search_bar',);
                    }

                }

                // _profiler_purge
                if ($pathinfo === '/_profiler/purge') {
                    return array (  '_controller' => 'web_profiler.controller.profiler:purgeAction',  '_route' => '_profiler_purge',);
                }

                // _profiler_info
                if (0 === strpos($pathinfo, '/_profiler/info') && preg_match('#^/_profiler/info/(?P<about>[^/]++)$#s', $pathinfo, $matches)) {
                    return $this->mergeDefaults(array_replace($matches, array('_route' => '_profiler_info')), array (  '_controller' => 'web_profiler.controller.profiler:infoAction',));
                }

                // _profiler_phpinfo
                if ($pathinfo === '/_profiler/phpinfo') {
                    return array (  '_controller' => 'web_profiler.controller.profiler:phpinfoAction',  '_route' => '_profiler_phpinfo',);
                }

                // _profiler_search_results
                if (preg_match('#^/_profiler/(?P<token>[^/]++)/search/results$#s', $pathinfo, $matches)) {
                    return $this->mergeDefaults(array_replace($matches, array('_route' => '_profiler_search_results')), array (  '_controller' => 'web_profiler.controller.profiler:searchResultsAction',));
                }

                // _profiler
                if (preg_match('#^/_profiler/(?P<token>[^/]++)$#s', $pathinfo, $matches)) {
                    return $this->mergeDefaults(array_replace($matches, array('_route' => '_profiler')), array (  '_controller' => 'web_profiler.controller.profiler:panelAction',));
                }

                // _profiler_router
                if (preg_match('#^/_profiler/(?P<token>[^/]++)/router$#s', $pathinfo, $matches)) {
                    return $this->mergeDefaults(array_replace($matches, array('_route' => '_profiler_router')), array (  '_controller' => 'web_profiler.controller.router:panelAction',));
                }

                // _profiler_exception
                if (preg_match('#^/_profiler/(?P<token>[^/]++)/exception$#s', $pathinfo, $matches)) {
                    return $this->mergeDefaults(array_replace($matches, array('_route' => '_profiler_exception')), array (  '_controller' => 'web_profiler.controller.exception:showAction',));
                }

                // _profiler_exception_css
                if (preg_match('#^/_profiler/(?P<token>[^/]++)/exception\\.css$#s', $pathinfo, $matches)) {
                    return $this->mergeDefaults(array_replace($matches, array('_route' => '_profiler_exception_css')), array (  '_controller' => 'web_profiler.controller.exception:cssAction',));
                }

            }

            if (0 === strpos($pathinfo, '/_configurator')) {
                // _configurator_home
                if (rtrim($pathinfo, '/') === '/_configurator') {
                    if (substr($pathinfo, -1) !== '/') {
                        return $this->redirect($pathinfo.'/', '_configurator_home');
                    }

                    return array (  '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::checkAction',  '_route' => '_configurator_home',);
                }

                // _configurator_step
                if (0 === strpos($pathinfo, '/_configurator/step') && preg_match('#^/_configurator/step/(?P<index>[^/]++)$#s', $pathinfo, $matches)) {
                    return $this->mergeDefaults(array_replace($matches, array('_route' => '_configurator_step')), array (  '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::stepAction',));
                }

                // _configurator_final
                if ($pathinfo === '/_configurator/final') {
                    return array (  '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::finalAction',  '_route' => '_configurator_final',);
                }

            }

        }

        // dex_homepage
        if (0 === strpos($pathinfo, '/hello') && preg_match('#^/hello/(?P<name>[^/]++)$#s', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'dex_homepage')), array (  '_controller' => 'Dex\\DexBundle\\Controller\\DefaultController::indexAction',));
        }

        if (0 === strpos($pathinfo, '/log')) {
            if (0 === strpos($pathinfo, '/login')) {
                // fos_user_security_login
                if ($pathinfo === '/login') {
                    if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                        $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                        goto not_fos_user_security_login;
                    }

                    return array (  '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::loginAction',  '_route' => 'fos_user_security_login',);
                }
                not_fos_user_security_login:

                // fos_user_security_check
                if ($pathinfo === '/login_check') {
                    if ($this->context->getMethod() != 'POST') {
                        $allow[] = 'POST';
                        goto not_fos_user_security_check;
                    }

                    return array (  '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::checkAction',  '_route' => 'fos_user_security_check',);
                }
                not_fos_user_security_check:

            }

            // fos_user_security_logout
            if ($pathinfo === '/logout') {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_fos_user_security_logout;
                }

                return array (  '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::logoutAction',  '_route' => 'fos_user_security_logout',);
            }
            not_fos_user_security_logout:

        }

        if (0 === strpos($pathinfo, '/profile')) {
            // fos_user_profile_show
            if (rtrim($pathinfo, '/') === '/profile') {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_fos_user_profile_show;
                }

                if (substr($pathinfo, -1) !== '/') {
                    return $this->redirect($pathinfo.'/', 'fos_user_profile_show');
                }

                return array (  '_controller' => 'FOS\\UserBundle\\Controller\\ProfileController::showAction',  '_route' => 'fos_user_profile_show',);
            }
            not_fos_user_profile_show:

            // fos_user_profile_edit
            if ($pathinfo === '/profile/edit') {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_fos_user_profile_edit;
                }

                return array (  '_controller' => 'FOS\\UserBundle\\Controller\\ProfileController::editAction',  '_route' => 'fos_user_profile_edit',);
            }
            not_fos_user_profile_edit:

        }

        if (0 === strpos($pathinfo, '/re')) {
            if (0 === strpos($pathinfo, '/register')) {
                // fos_user_registration_register
                if (rtrim($pathinfo, '/') === '/register') {
                    if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                        $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                        goto not_fos_user_registration_register;
                    }

                    if (substr($pathinfo, -1) !== '/') {
                        return $this->redirect($pathinfo.'/', 'fos_user_registration_register');
                    }

                    return array (  '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::registerAction',  '_route' => 'fos_user_registration_register',);
                }
                not_fos_user_registration_register:

                if (0 === strpos($pathinfo, '/register/c')) {
                    // fos_user_registration_check_email
                    if ($pathinfo === '/register/check-email') {
                        if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                            $allow = array_merge($allow, array('GET', 'HEAD'));
                            goto not_fos_user_registration_check_email;
                        }

                        return array (  '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::checkEmailAction',  '_route' => 'fos_user_registration_check_email',);
                    }
                    not_fos_user_registration_check_email:

                    if (0 === strpos($pathinfo, '/register/confirm')) {
                        // fos_user_registration_confirm
                        if (preg_match('#^/register/confirm/(?P<token>[^/]++)$#s', $pathinfo, $matches)) {
                            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                                $allow = array_merge($allow, array('GET', 'HEAD'));
                                goto not_fos_user_registration_confirm;
                            }

                            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fos_user_registration_confirm')), array (  '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::confirmAction',));
                        }
                        not_fos_user_registration_confirm:

                        // fos_user_registration_confirmed
                        if ($pathinfo === '/register/confirmed') {
                            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                                $allow = array_merge($allow, array('GET', 'HEAD'));
                                goto not_fos_user_registration_confirmed;
                            }

                            return array (  '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::confirmedAction',  '_route' => 'fos_user_registration_confirmed',);
                        }
                        not_fos_user_registration_confirmed:

                    }

                }

            }

            if (0 === strpos($pathinfo, '/resetting')) {
                // fos_user_resetting_request
                if ($pathinfo === '/resetting/request') {
                    if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                        $allow = array_merge($allow, array('GET', 'HEAD'));
                        goto not_fos_user_resetting_request;
                    }

                    return array (  '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::requestAction',  '_route' => 'fos_user_resetting_request',);
                }
                not_fos_user_resetting_request:

                // fos_user_resetting_send_email
                if ($pathinfo === '/resetting/send-email') {
                    if ($this->context->getMethod() != 'POST') {
                        $allow[] = 'POST';
                        goto not_fos_user_resetting_send_email;
                    }

                    return array (  '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::sendEmailAction',  '_route' => 'fos_user_resetting_send_email',);
                }
                not_fos_user_resetting_send_email:

                // fos_user_resetting_check_email
                if ($pathinfo === '/resetting/check-email') {
                    if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                        $allow = array_merge($allow, array('GET', 'HEAD'));
                        goto not_fos_user_resetting_check_email;
                    }

                    return array (  '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::checkEmailAction',  '_route' => 'fos_user_resetting_check_email',);
                }
                not_fos_user_resetting_check_email:

                // fos_user_resetting_reset
                if (0 === strpos($pathinfo, '/resetting/reset') && preg_match('#^/resetting/reset/(?P<token>[^/]++)$#s', $pathinfo, $matches)) {
                    if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                        $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                        goto not_fos_user_resetting_reset;
                    }

                    return $this->mergeDefaults(array_replace($matches, array('_route' => 'fos_user_resetting_reset')), array (  '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::resetAction',));
                }
                not_fos_user_resetting_reset:

            }

        }

        // fos_user_change_password
        if ($pathinfo === '/profile/change-password') {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fos_user_change_password;
            }

            return array (  '_controller' => 'FOS\\UserBundle\\Controller\\ChangePasswordController::changePasswordAction',  '_route' => 'fos_user_change_password',);
        }
        not_fos_user_change_password:

        if (0 === strpos($pathinfo, '/a')) {
            // qcm_homepage
            if ($pathinfo === '/accueil') {
                return array (  '_controller' => 'Qcm\\QcmBundle\\Controller\\DefaultController::indexAction',  '_route' => 'qcm_homepage',);
            }

            if (0 === strpos($pathinfo, '/admin')) {
                if (0 === strpos($pathinfo, '/admin/question')) {
                    // question
                    if (rtrim($pathinfo, '/') === '/admin/question') {
                        if (substr($pathinfo, -1) !== '/') {
                            return $this->redirect($pathinfo.'/', 'question');
                        }

                        return array (  '_controller' => 'Qcm\\QcmBundle\\Controller\\QuestionController::indexAction',  '_route' => 'question',);
                    }

                    // question_show
                    if (preg_match('#^/admin/question/(?P<id>[^/]++)/show$#s', $pathinfo, $matches)) {
                        return $this->mergeDefaults(array_replace($matches, array('_route' => 'question_show')), array (  '_controller' => 'Qcm\\QcmBundle\\Controller\\QuestionController::showAction',));
                    }

                    // question_new
                    if ($pathinfo === '/admin/question/new') {
                        return array (  '_controller' => 'Qcm\\QcmBundle\\Controller\\QuestionController::newAction',  '_route' => 'question_new',);
                    }

                    // question_create
                    if ($pathinfo === '/admin/question/create') {
                        if ($this->context->getMethod() != 'POST') {
                            $allow[] = 'POST';
                            goto not_question_create;
                        }

                        return array (  '_controller' => 'Qcm\\QcmBundle\\Controller\\QuestionController::createAction',  '_route' => 'question_create',);
                    }
                    not_question_create:

                    // question_edit
                    if (preg_match('#^/admin/question/(?P<id>[^/]++)/edit$#s', $pathinfo, $matches)) {
                        return $this->mergeDefaults(array_replace($matches, array('_route' => 'question_edit')), array (  '_controller' => 'Qcm\\QcmBundle\\Controller\\QuestionController::editAction',));
                    }

                    // question_update
                    if (preg_match('#^/admin/question/(?P<id>[^/]++)/update$#s', $pathinfo, $matches)) {
                        if (!in_array($this->context->getMethod(), array('POST', 'PUT'))) {
                            $allow = array_merge($allow, array('POST', 'PUT'));
                            goto not_question_update;
                        }

                        return $this->mergeDefaults(array_replace($matches, array('_route' => 'question_update')), array (  '_controller' => 'Qcm\\QcmBundle\\Controller\\QuestionController::updateAction',));
                    }
                    not_question_update:

                    // question_delete
                    if (preg_match('#^/admin/question/(?P<id>[^/]++)/delete$#s', $pathinfo, $matches)) {
                        if (!in_array($this->context->getMethod(), array('POST', 'DELETE'))) {
                            $allow = array_merge($allow, array('POST', 'DELETE'));
                            goto not_question_delete;
                        }

                        return $this->mergeDefaults(array_replace($matches, array('_route' => 'question_delete')), array (  '_controller' => 'Qcm\\QcmBundle\\Controller\\QuestionController::deleteAction',));
                    }
                    not_question_delete:

                }

                if (0 === strpos($pathinfo, '/admin/reponse')) {
                    // reponse
                    if (rtrim($pathinfo, '/') === '/admin/reponse') {
                        if (substr($pathinfo, -1) !== '/') {
                            return $this->redirect($pathinfo.'/', 'reponse');
                        }

                        return array (  '_controller' => 'Qcm\\QcmBundle\\Controller\\ReponseController::indexAction',  '_route' => 'reponse',);
                    }

                    // reponse_show
                    if (preg_match('#^/admin/reponse/(?P<id>[^/]++)/show$#s', $pathinfo, $matches)) {
                        return $this->mergeDefaults(array_replace($matches, array('_route' => 'reponse_show')), array (  '_controller' => 'Qcm\\QcmBundle\\Controller\\ReponseController::showAction',));
                    }

                    // reponse_new
                    if ($pathinfo === '/admin/reponse/new') {
                        return array (  '_controller' => 'Qcm\\QcmBundle\\Controller\\ReponseController::newAction',  '_route' => 'reponse_new',);
                    }

                    // reponse_create
                    if ($pathinfo === '/admin/reponse/create') {
                        if ($this->context->getMethod() != 'POST') {
                            $allow[] = 'POST';
                            goto not_reponse_create;
                        }

                        return array (  '_controller' => 'Qcm\\QcmBundle\\Controller\\ReponseController::createAction',  '_route' => 'reponse_create',);
                    }
                    not_reponse_create:

                    // reponse_edit
                    if (preg_match('#^/admin/reponse/(?P<id>[^/]++)/edit$#s', $pathinfo, $matches)) {
                        return $this->mergeDefaults(array_replace($matches, array('_route' => 'reponse_edit')), array (  '_controller' => 'Qcm\\QcmBundle\\Controller\\ReponseController::editAction',));
                    }

                    // reponse_update
                    if (preg_match('#^/admin/reponse/(?P<id>[^/]++)/update$#s', $pathinfo, $matches)) {
                        if (!in_array($this->context->getMethod(), array('POST', 'PUT'))) {
                            $allow = array_merge($allow, array('POST', 'PUT'));
                            goto not_reponse_update;
                        }

                        return $this->mergeDefaults(array_replace($matches, array('_route' => 'reponse_update')), array (  '_controller' => 'Qcm\\QcmBundle\\Controller\\ReponseController::updateAction',));
                    }
                    not_reponse_update:

                    // reponse_delete
                    if (preg_match('#^/admin/reponse/(?P<id>[^/]++)/delete$#s', $pathinfo, $matches)) {
                        if (!in_array($this->context->getMethod(), array('POST', 'DELETE'))) {
                            $allow = array_merge($allow, array('POST', 'DELETE'));
                            goto not_reponse_delete;
                        }

                        return $this->mergeDefaults(array_replace($matches, array('_route' => 'reponse_delete')), array (  '_controller' => 'Qcm\\QcmBundle\\Controller\\ReponseController::deleteAction',));
                    }
                    not_reponse_delete:

                }

                if (0 === strpos($pathinfo, '/admin/dashboard')) {
                    // reponseexacte
                    if (rtrim($pathinfo, '/') === '/admin/dashboard') {
                        if (substr($pathinfo, -1) !== '/') {
                            return $this->redirect($pathinfo.'/', 'reponseexacte');
                        }

                        return array (  '_controller' => 'Qcm\\QcmBundle\\Controller\\ReponseExacteController::indexAction',  '_route' => 'reponseexacte',);
                    }

                    // reponseexacte_show
                    if (preg_match('#^/admin/dashboard/(?P<id>[^/]++)/show$#s', $pathinfo, $matches)) {
                        return $this->mergeDefaults(array_replace($matches, array('_route' => 'reponseexacte_show')), array (  '_controller' => 'Qcm\\QcmBundle\\Controller\\ReponseExacteController::showAction',));
                    }

                    // reponseexacte_new
                    if ($pathinfo === '/admin/dashboard/new') {
                        return array (  '_controller' => 'Qcm\\QcmBundle\\Controller\\ReponseExacteController::newAction',  '_route' => 'reponseexacte_new',);
                    }

                    // reponseexacte_create
                    if ($pathinfo === '/admin/dashboard/create') {
                        if ($this->context->getMethod() != 'POST') {
                            $allow[] = 'POST';
                            goto not_reponseexacte_create;
                        }

                        return array (  '_controller' => 'Qcm\\QcmBundle\\Controller\\ReponseExacteController::createAction',  '_route' => 'reponseexacte_create',);
                    }
                    not_reponseexacte_create:

                    // reponseexacte_edit
                    if (preg_match('#^/admin/dashboard/(?P<id>[^/]++)/edit$#s', $pathinfo, $matches)) {
                        return $this->mergeDefaults(array_replace($matches, array('_route' => 'reponseexacte_edit')), array (  '_controller' => 'Qcm\\QcmBundle\\Controller\\ReponseExacteController::editAction',));
                    }

                    // reponseexacte_update
                    if (preg_match('#^/admin/dashboard/(?P<id>[^/]++)/update$#s', $pathinfo, $matches)) {
                        if (!in_array($this->context->getMethod(), array('POST', 'PUT'))) {
                            $allow = array_merge($allow, array('POST', 'PUT'));
                            goto not_reponseexacte_update;
                        }

                        return $this->mergeDefaults(array_replace($matches, array('_route' => 'reponseexacte_update')), array (  '_controller' => 'Qcm\\QcmBundle\\Controller\\ReponseExacteController::updateAction',));
                    }
                    not_reponseexacte_update:

                    // reponseexacte_delete
                    if (preg_match('#^/admin/dashboard/(?P<id>[^/]++)/delete$#s', $pathinfo, $matches)) {
                        if (!in_array($this->context->getMethod(), array('POST', 'DELETE'))) {
                            $allow = array_merge($allow, array('POST', 'DELETE'));
                            goto not_reponseexacte_delete;
                        }

                        return $this->mergeDefaults(array_replace($matches, array('_route' => 'reponseexacte_delete')), array (  '_controller' => 'Qcm\\QcmBundle\\Controller\\ReponseExacteController::deleteAction',));
                    }
                    not_reponseexacte_delete:

                }

            }

        }

        if (0 === strpos($pathinfo, '/r')) {
            // qcm_getresponse
            if ($pathinfo === '/reponse') {
                return array (  '_controller' => 'Qcm\\QcmBundle\\Controller\\DefaultController::reponseAction',  '_route' => 'qcm_getresponse',);
            }

            // qcm_jsrouting
            if ($pathinfo === '/route') {
                return array (  '_controller' => 'Qcm\\QcmBundle\\Controller\\AjaxController::indexAction',  '_route' => 'qcm_jsrouting',);
            }

        }

        // qcm_webservice
        if (0 === strpos($pathinfo, '/questionParCategorie') && preg_match('#^/questionParCategorie/(?P<idCategorie>[^/]++)$#s', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_qcm_webservice;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'qcm_webservice')), array (  '_controller' => 'Qcm\\QcmBundle\\Controller\\DefaultController::WebServiceAction',  '_format' => 'json',  '_locale' => 'en',));
        }
        not_qcm_webservice:

        // fos_js_routing_js
        if (0 === strpos($pathinfo, '/js/routing') && preg_match('#^/js/routing(?:\\.(?P<_format>js|json))?$#s', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fos_js_routing_js;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fos_js_routing_js')), array (  '_controller' => 'fos_js_routing.controller:indexAction',  '_format' => 'js',));
        }
        not_fos_js_routing_js:

        if (0 === strpos($pathinfo, '/api')) {
            // api_get_user
            if (0 === strpos($pathinfo, '/api/users') && preg_match('#^/api/users/(?P<username>[^/\\.]++)(?:\\.(?P<_format>xml|json|html))?$#s', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_api_get_user;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'api_get_user')), array (  '_controller' => 'Dex\\DexBundle\\Controller\\UtilisateursRestController::getUserAction',  '_format' => 'json',));
            }
            not_api_get_user:

            // api_get_me
            if (0 === strpos($pathinfo, '/api/me') && preg_match('#^/api/me(?:\\.(?P<_format>xml|json|html))?$#s', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_api_get_me;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'api_get_me')), array (  '_controller' => 'Dex\\DexBundle\\Controller\\UtilisateursRestController::getMeAction',  '_format' => 'json',));
            }
            not_api_get_me:

            // api_get_all_question
            if (0 === strpos($pathinfo, '/api/all/question') && preg_match('#^/api/all/question(?:\\.(?P<_format>xml|json|html))?$#s', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_api_get_all_question;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'api_get_all_question')), array (  '_controller' => 'Dex\\DexBundle\\Controller\\UtilisateursRestController::getAllQuestionAction',  '_format' => 'json',));
            }
            not_api_get_all_question:

            if (0 === strpos($pathinfo, '/api/questions')) {
                // api_get_question_by_categorie
                if (preg_match('#^/api/questions/(?P<idCategorie>[^/]++)/by/categorie(?:\\.(?P<_format>xml|json|html))?$#s', $pathinfo, $matches)) {
                    if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                        $allow = array_merge($allow, array('GET', 'HEAD'));
                        goto not_api_get_question_by_categorie;
                    }

                    return $this->mergeDefaults(array_replace($matches, array('_route' => 'api_get_question_by_categorie')), array (  '_controller' => 'Dex\\DexBundle\\Controller\\UtilisateursRestController::getQuestionByCategorieAction',  '_format' => 'json',));
                }
                not_api_get_question_by_categorie:

                // api_get_question_by_categories
                if (preg_match('#^/api/questions/(?P<categorie>[^/]++)/by/categories(?:\\.(?P<_format>xml|json|html))?$#s', $pathinfo, $matches)) {
                    if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                        $allow = array_merge($allow, array('GET', 'HEAD'));
                        goto not_api_get_question_by_categories;
                    }

                    return $this->mergeDefaults(array_replace($matches, array('_route' => 'api_get_question_by_categories')), array (  '_controller' => 'Dex\\DexBundle\\Controller\\UtilisateursRestController::getQuestionByCategoriesAction',  '_format' => 'json',));
                }
                not_api_get_question_by_categories:

            }

            // api_get_all_categorie
            if (0 === strpos($pathinfo, '/api/all/categorie') && preg_match('#^/api/all/categorie(?:\\.(?P<_format>xml|json|html))?$#s', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_api_get_all_categorie;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'api_get_all_categorie')), array (  '_controller' => 'Dex\\DexBundle\\Controller\\UtilisateursRestController::getAllCategorieAction',  '_format' => 'json',));
            }
            not_api_get_all_categorie:

            if (0 === strpos($pathinfo, '/api/reponse')) {
                // api_get_reponse_exacte
                if (0 === strpos($pathinfo, '/api/reponse/exacte') && preg_match('#^/api/reponse/exacte(?:\\.(?P<_format>xml|json|html))?$#s', $pathinfo, $matches)) {
                    if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                        $allow = array_merge($allow, array('GET', 'HEAD'));
                        goto not_api_get_reponse_exacte;
                    }

                    return $this->mergeDefaults(array_replace($matches, array('_route' => 'api_get_reponse_exacte')), array (  '_controller' => 'Dex\\DexBundle\\Controller\\UtilisateursRestController::getReponseExacteAction',  '_format' => 'json',));
                }
                not_api_get_reponse_exacte:

                // api_get_reponse_par_question
                if (0 === strpos($pathinfo, '/api/reponses') && preg_match('#^/api/reponses/(?P<idQuestion>[^/]++)/par/question(?:\\.(?P<_format>xml|json|html))?$#s', $pathinfo, $matches)) {
                    if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                        $allow = array_merge($allow, array('GET', 'HEAD'));
                        goto not_api_get_reponse_par_question;
                    }

                    return $this->mergeDefaults(array_replace($matches, array('_route' => 'api_get_reponse_par_question')), array (  '_controller' => 'Dex\\DexBundle\\Controller\\UtilisateursRestController::getReponseParQuestionAction',  '_format' => 'json',));
                }
                not_api_get_reponse_par_question:

            }

            if (0 === strpos($pathinfo, '/api/all')) {
                // api_get_all_reponse
                if (0 === strpos($pathinfo, '/api/all/reponse') && preg_match('#^/api/all/reponse(?:\\.(?P<_format>xml|json|html))?$#s', $pathinfo, $matches)) {
                    if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                        $allow = array_merge($allow, array('GET', 'HEAD'));
                        goto not_api_get_all_reponse;
                    }

                    return $this->mergeDefaults(array_replace($matches, array('_route' => 'api_get_all_reponse')), array (  '_controller' => 'Dex\\DexBundle\\Controller\\UtilisateursRestController::getAllReponseAction',  '_format' => 'json',));
                }
                not_api_get_all_reponse:

                // api_get_all_utilisateur
                if (0 === strpos($pathinfo, '/api/all/utilisateur') && preg_match('#^/api/all/utilisateur(?:\\.(?P<_format>xml|json|html))?$#s', $pathinfo, $matches)) {
                    if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                        $allow = array_merge($allow, array('GET', 'HEAD'));
                        goto not_api_get_all_utilisateur;
                    }

                    return $this->mergeDefaults(array_replace($matches, array('_route' => 'api_get_all_utilisateur')), array (  '_controller' => 'Dex\\DexBundle\\Controller\\UtilisateursRestController::getAllUtilisateurAction',  '_format' => 'json',));
                }
                not_api_get_all_utilisateur:

            }

            // api_get_reponse_par_question_par_categorie
            if (0 === strpos($pathinfo, '/api/reponses') && preg_match('#^/api/reponses/(?P<categorie>[^/]++)/par/question/par/categorie(?:\\.(?P<_format>xml|json|html))?$#s', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_api_get_reponse_par_question_par_categorie;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'api_get_reponse_par_question_par_categorie')), array (  '_controller' => 'Dex\\DexBundle\\Controller\\UtilisateursRestController::getReponseParQuestionParCategorieAction',  '_format' => 'json',));
            }
            not_api_get_reponse_par_question_par_categorie:

        }

        // _welcome
        if (rtrim($pathinfo, '/') === '') {
            if (substr($pathinfo, -1) !== '/') {
                return $this->redirect($pathinfo.'/', '_welcome');
            }

            return array (  '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::loginAction',  '_route' => '_welcome',);
        }

        if (0 === strpos($pathinfo, '/demo')) {
            if (0 === strpos($pathinfo, '/demo/secured')) {
                if (0 === strpos($pathinfo, '/demo/secured/log')) {
                    if (0 === strpos($pathinfo, '/demo/secured/login')) {
                        // _demo_login
                        if ($pathinfo === '/demo/secured/login') {
                            return array (  '_controller' => 'Acme\\DemoBundle\\Controller\\SecuredController::loginAction',  '_route' => '_demo_login',);
                        }

                        // _security_check
                        if ($pathinfo === '/demo/secured/login_check') {
                            return array (  '_controller' => 'Acme\\DemoBundle\\Controller\\SecuredController::securityCheckAction',  '_route' => '_security_check',);
                        }

                    }

                    // _demo_logout
                    if ($pathinfo === '/demo/secured/logout') {
                        return array (  '_controller' => 'Acme\\DemoBundle\\Controller\\SecuredController::logoutAction',  '_route' => '_demo_logout',);
                    }

                }

                if (0 === strpos($pathinfo, '/demo/secured/hello')) {
                    // acme_demo_secured_hello
                    if ($pathinfo === '/demo/secured/hello') {
                        return array (  'name' => 'World',  '_controller' => 'Acme\\DemoBundle\\Controller\\SecuredController::helloAction',  '_route' => 'acme_demo_secured_hello',);
                    }

                    // _demo_secured_hello
                    if (preg_match('#^/demo/secured/hello/(?P<name>[^/]++)$#s', $pathinfo, $matches)) {
                        return $this->mergeDefaults(array_replace($matches, array('_route' => '_demo_secured_hello')), array (  '_controller' => 'Acme\\DemoBundle\\Controller\\SecuredController::helloAction',));
                    }

                    // _demo_secured_hello_admin
                    if (0 === strpos($pathinfo, '/demo/secured/hello/admin') && preg_match('#^/demo/secured/hello/admin/(?P<name>[^/]++)$#s', $pathinfo, $matches)) {
                        return $this->mergeDefaults(array_replace($matches, array('_route' => '_demo_secured_hello_admin')), array (  '_controller' => 'Acme\\DemoBundle\\Controller\\SecuredController::helloadminAction',));
                    }

                }

            }

            // _demo
            if (rtrim($pathinfo, '/') === '/demo') {
                if (substr($pathinfo, -1) !== '/') {
                    return $this->redirect($pathinfo.'/', '_demo');
                }

                return array (  '_controller' => 'Acme\\DemoBundle\\Controller\\DemoController::indexAction',  '_route' => '_demo',);
            }

            // _demo_hello
            if (0 === strpos($pathinfo, '/demo/hello') && preg_match('#^/demo/hello/(?P<name>[^/]++)$#s', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => '_demo_hello')), array (  '_controller' => 'Acme\\DemoBundle\\Controller\\DemoController::helloAction',));
            }

            // _demo_contact
            if ($pathinfo === '/demo/contact') {
                return array (  '_controller' => 'Acme\\DemoBundle\\Controller\\DemoController::contactAction',  '_route' => '_demo_contact',);
            }

        }

        throw 0 < count($allow) ? new MethodNotAllowedException(array_unique($allow)) : new ResourceNotFoundException();
    }
}
";}i:1;a:2:{i:0;s:5:"array";i:1;a:27:{i:0;a:2:{i:0;s:6:"object";i:1;s:46:"Symfony\Component\Config\Resource\FileResource";}i:1;a:2:{i:0;s:6:"object";i:1;s:51:"Symfony\Bundle\AsseticBundle\Config\AsseticResource";}i:2;a:2:{i:0;s:6:"object";i:1;s:51:"Symfony\Bundle\AsseticBundle\Config\AsseticResource";}i:3;a:2:{i:0;s:6:"object";i:1;s:51:"Symfony\Bundle\AsseticBundle\Config\AsseticResource";}i:4;a:2:{i:0;s:6:"object";i:1;s:46:"Symfony\Component\Config\Resource\FileResource";}i:5;a:2:{i:0;s:6:"object";i:1;s:46:"Symfony\Component\Config\Resource\FileResource";}i:6;a:2:{i:0;s:6:"object";i:1;s:46:"Symfony\Component\Config\Resource\FileResource";}i:7;a:2:{i:0;s:6:"object";i:1;s:46:"Symfony\Component\Config\Resource\FileResource";}i:8;a:2:{i:0;s:6:"object";i:1;s:46:"Symfony\Component\Config\Resource\FileResource";}i:9;a:2:{i:0;s:6:"object";i:1;s:46:"Symfony\Component\Config\Resource\FileResource";}i:10;a:2:{i:0;s:6:"object";i:1;s:46:"Symfony\Component\Config\Resource\FileResource";}i:11;a:2:{i:0;s:6:"object";i:1;s:46:"Symfony\Component\Config\Resource\FileResource";}i:12;a:2:{i:0;s:6:"object";i:1;s:46:"Symfony\Component\Config\Resource\FileResource";}i:13;a:2:{i:0;s:6:"object";i:1;s:46:"Symfony\Component\Config\Resource\FileResource";}i:14;a:2:{i:0;s:6:"object";i:1;s:46:"Symfony\Component\Config\Resource\FileResource";}i:15;a:2:{i:0;s:6:"object";i:1;s:46:"Symfony\Component\Config\Resource\FileResource";}i:16;a:2:{i:0;s:6:"object";i:1;s:46:"Symfony\Component\Config\Resource\FileResource";}i:17;a:2:{i:0;s:6:"object";i:1;s:46:"Symfony\Component\Config\Resource\FileResource";}i:18;a:2:{i:0;s:6:"object";i:1;s:46:"Symfony\Component\Config\Resource\FileResource";}i:19;a:2:{i:0;s:6:"object";i:1;s:46:"Symfony\Component\Config\Resource\FileResource";}i:20;a:2:{i:0;s:6:"object";i:1;s:46:"Symfony\Component\Config\Resource\FileResource";}i:21;a:2:{i:0;s:6:"object";i:1;s:46:"Symfony\Component\Config\Resource\FileResource";}i:22;a:2:{i:0;s:6:"object";i:1;s:46:"Symfony\Component\Config\Resource\FileResource";}i:23;a:2:{i:0;s:6:"object";i:1;s:46:"Symfony\Component\Config\Resource\FileResource";}i:24;a:2:{i:0;s:6:"object";i:1;s:46:"Symfony\Component\Config\Resource\FileResource";}i:25;a:2:{i:0;s:6:"object";i:1;s:46:"Symfony\Component\Config\Resource\FileResource";}i:26;a:2:{i:0;s:6:"object";i:1;s:46:"Symfony\Component\Config\Resource\FileResource";}}}}}i:4;a:8:{s:9:"namespace";s:25:"Symfony\Component\Routing";s:11:"short_class";s:6:"Router";s:5:"class";s:32:"Symfony\Component\Routing\Router";s:4:"type";s:2:"->";s:8:"function";s:10:"getMatcher";s:4:"file";s:43:"C:\wamp\www\QCMV2\app\cache\dev\classes.php";s:4:"line";i:1227;s:4:"args";a:0:{}}i:5;a:8:{s:9:"namespace";s:25:"Symfony\Component\Routing";s:11:"short_class";s:6:"Router";s:5:"class";s:32:"Symfony\Component\Routing\Router";s:4:"type";s:2:"->";s:8:"function";s:5:"match";s:4:"file";s:43:"C:\wamp\www\QCMV2\app\cache\dev\classes.php";s:4:"line";i:1886;s:4:"args";a:1:{i:0;a:2:{i:0;s:6:"string";i:1;s:17:"/admin/dashboard/";}}}i:6;a:8:{s:9:"namespace";s:42:"Symfony\Component\HttpKernel\EventListener";s:11:"short_class";s:14:"RouterListener";s:5:"class";s:57:"Symfony\Component\HttpKernel\EventListener\RouterListener";s:4:"type";s:2:"->";s:8:"function";s:15:"onKernelRequest";s:4:"file";N;s:4:"line";N;s:4:"args";a:1:{i:0;a:2:{i:0;s:6:"object";i:1;s:51:"Symfony\Component\HttpKernel\Event\GetResponseEvent";}}}i:7;a:8:{s:9:"namespace";s:0:"";s:11:"short_class";s:0:"";s:5:"class";s:0:"";s:4:"type";s:0:"";s:8:"function";s:14:"call_user_func";s:4:"file";s:108:"C:\wamp\www\QCMV2\vendor\symfony\symfony\src\Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher.php";s:4:"line";i:476;s:4:"args";a:2:{i:0;a:2:{i:0;s:5:"array";i:1;a:2:{i:0;a:2:{i:0;s:6:"object";i:1;s:57:"Symfony\Component\HttpKernel\EventListener\RouterListener";}i:1;a:2:{i:0;s:6:"string";i:1;s:15:"onKernelRequest";}}}i:1;a:2:{i:0;s:6:"object";i:1;s:51:"Symfony\Component\HttpKernel\Event\GetResponseEvent";}}}i:8;a:8:{s:9:"namespace";s:34:"Symfony\Component\HttpKernel\Debug";s:11:"short_class";s:24:"TraceableEventDispatcher";s:5:"class";s:59:"Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher";s:4:"type";s:2:"->";s:8:"function";s:44:"Symfony\Component\HttpKernel\Debug\{closure}";s:4:"file";N;s:4:"line";N;s:4:"args";a:1:{i:0;a:2:{i:0;s:6:"object";i:1;s:51:"Symfony\Component\HttpKernel\Event\GetResponseEvent";}}}i:9;a:8:{s:9:"namespace";s:0:"";s:11:"short_class";s:0:"";s:5:"class";s:0:"";s:4:"type";s:0:"";s:8:"function";s:14:"call_user_func";s:4:"file";s:43:"C:\wamp\www\QCMV2\app\cache\dev\classes.php";s:4:"line";i:1691;s:4:"args";a:2:{i:0;a:2:{i:0;s:6:"object";i:1;s:7:"Closure";}i:1;a:2:{i:0;s:6:"object";i:1;s:51:"Symfony\Component\HttpKernel\Event\GetResponseEvent";}}}i:10;a:8:{s:9:"namespace";s:33:"Symfony\Component\EventDispatcher";s:11:"short_class";s:15:"EventDispatcher";s:5:"class";s:49:"Symfony\Component\EventDispatcher\EventDispatcher";s:4:"type";s:2:"->";s:8:"function";s:10:"doDispatch";s:4:"file";s:43:"C:\wamp\www\QCMV2\app\cache\dev\classes.php";s:4:"line";i:1617;s:4:"args";a:3:{i:0;a:2:{i:0;s:5:"array";i:1;a:11:{i:0;a:2:{i:0;s:6:"object";i:1;s:7:"Closure";}i:1;a:2:{i:0;s:6:"object";i:1;s:7:"Closure";}i:2;a:2:{i:0;s:6:"object";i:1;s:7:"Closure";}i:3;a:2:{i:0;s:6:"object";i:1;s:7:"Closure";}i:4;a:2:{i:0;s:6:"object";i:1;s:7:"Closure";}i:5;a:2:{i:0;s:6:"object";i:1;s:7:"Closure";}i:6;a:2:{i:0;s:6:"object";i:1;s:7:"Closure";}i:7;a:2:{i:0;s:6:"object";i:1;s:7:"Closure";}i:8;a:2:{i:0;s:6:"object";i:1;s:7:"Closure";}i:9;a:2:{i:0;s:6:"object";i:1;s:7:"Closure";}i:10;a:2:{i:0;s:6:"object";i:1;s:7:"Closure";}}}i:1;a:2:{i:0;s:6:"string";i:1;s:14:"kernel.request";}i:2;a:2:{i:0;s:6:"object";i:1;s:51:"Symfony\Component\HttpKernel\Event\GetResponseEvent";}}}i:11;a:8:{s:9:"namespace";s:33:"Symfony\Component\EventDispatcher";s:11:"short_class";s:15:"EventDispatcher";s:5:"class";s:49:"Symfony\Component\EventDispatcher\EventDispatcher";s:4:"type";s:2:"->";s:8:"function";s:8:"dispatch";s:4:"file";s:108:"C:\wamp\www\QCMV2\vendor\symfony\symfony\src\Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher.php";s:4:"line";i:155;s:4:"args";a:2:{i:0;a:2:{i:0;s:6:"string";i:1;s:14:"kernel.request";}i:1;a:2:{i:0;s:6:"object";i:1;s:51:"Symfony\Component\HttpKernel\Event\GetResponseEvent";}}}i:12;a:8:{s:9:"namespace";s:34:"Symfony\Component\HttpKernel\Debug";s:11:"short_class";s:24:"TraceableEventDispatcher";s:5:"class";s:59:"Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher";s:4:"type";s:2:"->";s:8:"function";s:8:"dispatch";s:4:"file";s:41:"C:\wamp\www\QCMV2\app\bootstrap.php.cache";s:4:"line";i:2967;s:4:"args";a:2:{i:0;a:2:{i:0;s:6:"string";i:1;s:14:"kernel.request";}i:1;a:2:{i:0;s:6:"object";i:1;s:51:"Symfony\Component\HttpKernel\Event\GetResponseEvent";}}}i:13;a:8:{s:9:"namespace";s:28:"Symfony\Component\HttpKernel";s:11:"short_class";s:10:"HttpKernel";s:5:"class";s:39:"Symfony\Component\HttpKernel\HttpKernel";s:4:"type";s:2:"->";s:8:"function";s:9:"handleRaw";s:4:"file";s:41:"C:\wamp\www\QCMV2\app\bootstrap.php.cache";s:4:"line";i:2952;s:4:"args";a:2:{i:0;a:2:{i:0;s:6:"object";i:1;s:40:"Symfony\Component\HttpFoundation\Request";}i:1;a:2:{i:0;s:6:"string";i:1;s:1:"1";}}}i:14;a:8:{s:9:"namespace";s:28:"Symfony\Component\HttpKernel";s:11:"short_class";s:10:"HttpKernel";s:5:"class";s:39:"Symfony\Component\HttpKernel\HttpKernel";s:4:"type";s:2:"->";s:8:"function";s:6:"handle";s:4:"file";s:41:"C:\wamp\www\QCMV2\app\bootstrap.php.cache";s:4:"line";i:3081;s:4:"args";a:3:{i:0;a:2:{i:0;s:6:"object";i:1;s:40:"Symfony\Component\HttpFoundation\Request";}i:1;a:2:{i:0;s:6:"string";i:1;s:1:"1";}i:2;a:2:{i:0;s:7:"boolean";i:1;b:1;}}}i:15;a:8:{s:9:"namespace";s:48:"Symfony\Component\HttpKernel\DependencyInjection";s:11:"short_class";s:24:"ContainerAwareHttpKernel";s:5:"class";s:73:"Symfony\Component\HttpKernel\DependencyInjection\ContainerAwareHttpKernel";s:4:"type";s:2:"->";s:8:"function";s:6:"handle";s:4:"file";s:41:"C:\wamp\www\QCMV2\app\bootstrap.php.cache";s:4:"line";i:2351;s:4:"args";a:3:{i:0;a:2:{i:0;s:6:"object";i:1;s:40:"Symfony\Component\HttpFoundation\Request";}i:1;a:2:{i:0;s:6:"string";i:1;s:1:"1";}i:2;a:2:{i:0;s:7:"boolean";i:1;b:1;}}}i:16;a:8:{s:9:"namespace";s:28:"Symfony\Component\HttpKernel";s:11:"short_class";s:6:"Kernel";s:5:"class";s:35:"Symfony\Component\HttpKernel\Kernel";s:4:"type";s:2:"->";s:8:"function";s:6:"handle";s:4:"file";s:33:"C:\wamp\www\QCMV2\web\app_dev.php";s:4:"line";i:28;s:4:"args";a:1:{i:0;a:2:{i:0;s:6:"object";i:1;s:40:"Symfony\Component\HttpFoundation\Request";}}}}s:57:" Symfony\Component\Debug\Exception\FlattenException class";s:50:"Symfony\Component\Filesystem\Exception\IOException";s:62:" Symfony\Component\Debug\Exception\FlattenException statusCode";i:500;s:59:" Symfony\Component\Debug\Exception\FlattenException headers";a:0:{}s:56:" Symfony\Component\Debug\Exception\FlattenException file";s:88:"C:\wamp\www\QCMV2\vendor\symfony\symfony\src\Symfony\Component\Filesystem\Filesystem.php";s:56:" Symfony\Component\Debug\Exception\FlattenException line";i:264;s:64:" Symfony\Component\HttpKernel\Exception\FlattenException handler";N;}}}s:6:"events";C:61:"Symfony\Component\HttpKernel\DataCollector\EventDataCollector":23656:{a:2:{s:16:"called_listeners";a:32:{s:76:"kernel.request.Nelmio\CorsBundle\EventListener\CorsListener::onKernelRequest";a:7:{s:5:"event";s:14:"kernel.request";s:4:"type";s:6:"Method";s:5:"class";s:44:"Nelmio\CorsBundle\EventListener\CorsListener";s:6:"method";s:15:"onKernelRequest";s:4:"file";s:74:"C:\wamp\www\QCMV2\vendor\nelmio\cors-bundle\EventListener\CorsListener.php";s:4:"line";i:51;s:6:"pretty";s:61:"Nelmio\CorsBundle\EventListener\CorsListener::onKernelRequest";}s:91:"kernel.request.Symfony\Component\HttpKernel\EventListener\ProfilerListener::onKernelRequest";a:7:{s:5:"event";s:14:"kernel.request";s:4:"type";s:6:"Method";s:5:"class";s:59:"Symfony\Component\HttpKernel\EventListener\ProfilerListener";s:6:"method";s:15:"onKernelRequest";s:4:"file";s:108:"C:\wamp\www\QCMV2\vendor\symfony\symfony\src\Symfony\Component\HttpKernel\EventListener\ProfilerListener.php";s:4:"line";i:72;s:6:"pretty";s:76:"Symfony\Component\HttpKernel\EventListener\ProfilerListener::onKernelRequest";}s:92:"kernel.request.Symfony\Bundle\FrameworkBundle\EventListener\SessionListener::onKernelRequest";a:7:{s:5:"event";s:14:"kernel.request";s:4:"type";s:6:"Method";s:5:"class";s:60:"Symfony\Bundle\FrameworkBundle\EventListener\SessionListener";s:6:"method";s:15:"onKernelRequest";s:4:"file";s:43:"C:\wamp\www\QCMV2\app\cache\dev\classes.php";s:4:"line";i:23;s:6:"pretty";s:77:"Symfony\Bundle\FrameworkBundle\EventListener\SessionListener::onKernelRequest";}s:91:"kernel.request.Symfony\Component\HttpKernel\EventListener\FragmentListener::onKernelRequest";a:7:{s:5:"event";s:14:"kernel.request";s:4:"type";s:6:"Method";s:5:"class";s:59:"Symfony\Component\HttpKernel\EventListener\FragmentListener";s:6:"method";s:15:"onKernelRequest";s:4:"file";s:108:"C:\wamp\www\QCMV2\vendor\symfony\symfony\src\Symfony\Component\HttpKernel\EventListener\FragmentListener.php";s:4:"line";i:57;s:6:"pretty";s:76:"Symfony\Component\HttpKernel\EventListener\FragmentListener::onKernelRequest";}s:89:"kernel.request.Symfony\Component\HttpKernel\EventListener\RouterListener::onKernelRequest";a:7:{s:5:"event";s:14:"kernel.request";s:4:"type";s:6:"Method";s:5:"class";s:57:"Symfony\Component\HttpKernel\EventListener\RouterListener";s:6:"method";s:15:"onKernelRequest";s:4:"file";s:43:"C:\wamp\www\QCMV2\app\cache\dev\classes.php";s:4:"line";i:1875;s:6:"pretty";s:74:"Symfony\Component\HttpKernel\EventListener\RouterListener::onKernelRequest";}s:95:"kernel.exception.Symfony\Component\HttpKernel\EventListener\ProfilerListener::onKernelException";a:7:{s:5:"event";s:16:"kernel.exception";s:4:"type";s:6:"Method";s:5:"class";s:59:"Symfony\Component\HttpKernel\EventListener\ProfilerListener";s:6:"method";s:17:"onKernelException";s:4:"file";s:108:"C:\wamp\www\QCMV2\vendor\symfony\symfony\src\Symfony\Component\HttpKernel\EventListener\ProfilerListener.php";s:4:"line";i:63;s:6:"pretty";s:78:"Symfony\Component\HttpKernel\EventListener\ProfilerListener::onKernelException";}s:96:"kernel.exception.Symfony\Component\HttpKernel\EventListener\ExceptionListener::onKernelException";a:7:{s:5:"event";s:16:"kernel.exception";s:4:"type";s:6:"Method";s:5:"class";s:60:"Symfony\Component\HttpKernel\EventListener\ExceptionListener";s:6:"method";s:17:"onKernelException";s:4:"file";s:109:"C:\wamp\www\QCMV2\vendor\symfony\symfony\src\Symfony\Component\HttpKernel\EventListener\ExceptionListener.php";s:4:"line";i:39;s:6:"pretty";s:79:"Symfony\Component\HttpKernel\EventListener\ExceptionListener::onKernelException";}s:22:"kernel.request.closure";a:3:{s:5:"event";s:14:"kernel.request";s:4:"type";s:7:"Closure";s:6:"pretty";s:7:"closure";}s:89:"kernel.request.Symfony\Component\HttpKernel\EventListener\LocaleListener::onKernelRequest";a:7:{s:5:"event";s:14:"kernel.request";s:4:"type";s:6:"Method";s:5:"class";s:57:"Symfony\Component\HttpKernel\EventListener\LocaleListener";s:6:"method";s:15:"onKernelRequest";s:4:"file";s:106:"C:\wamp\www\QCMV2\vendor\symfony\symfony\src\Symfony\Component\HttpKernel\EventListener\LocaleListener.php";s:4:"line";i:51;s:6:"pretty";s:74:"Symfony\Component\HttpKernel\EventListener\LocaleListener::onKernelRequest";}s:73:"kernel.request.FOS\RestBundle\EventListener\BodyListener::onKernelRequest";a:7:{s:5:"event";s:14:"kernel.request";s:4:"type";s:6:"Method";s:5:"class";s:41:"FOS\RestBundle\EventListener\BodyListener";s:6:"method";s:15:"onKernelRequest";s:4:"file";s:99:"C:\wamp\www\QCMV2\vendor\friendsofsymfony\rest-bundle\FOS\RestBundle\EventListener\BodyListener.php";s:4:"line";i:89;s:6:"pretty";s:58:"FOS\RestBundle\EventListener\BodyListener::onKernelRequest";}s:72:"kernel.request.Symfony\Component\Security\Http\Firewall::onKernelRequest";a:7:{s:5:"event";s:14:"kernel.request";s:4:"type";s:6:"Method";s:5:"class";s:40:"Symfony\Component\Security\Http\Firewall";s:6:"method";s:15:"onKernelRequest";s:4:"file";s:43:"C:\wamp\www\QCMV2\app\cache\dev\classes.php";s:4:"line";i:2364;s:6:"pretty";s:57:"Symfony\Component\Security\Http\Firewall::onKernelRequest";}s:90:"kernel.request.Symfony\Bundle\AsseticBundle\EventListener\RequestListener::onKernelRequest";a:7:{s:5:"event";s:14:"kernel.request";s:4:"type";s:6:"Method";s:5:"class";s:58:"Symfony\Bundle\AsseticBundle\EventListener\RequestListener";s:6:"method";s:15:"onKernelRequest";s:4:"file";s:110:"C:\wamp\www\QCMV2\vendor\symfony\assetic-bundle\Symfony\Bundle\AsseticBundle\EventListener\RequestListener.php";s:4:"line";i:23;s:6:"pretty";s:75:"Symfony\Bundle\AsseticBundle\EventListener\RequestListener::onKernelRequest";}s:92:"kernel.request.Symfony\Component\HttpKernel\EventListener\ErrorsLoggerListener::injectLogger";a:7:{s:5:"event";s:14:"kernel.request";s:4:"type";s:6:"Method";s:5:"class";s:63:"Symfony\Component\HttpKernel\EventListener\ErrorsLoggerListener";s:6:"method";s:12:"injectLogger";s:4:"file";s:112:"C:\wamp\www\QCMV2\vendor\symfony\symfony\src\Symfony\Component\HttpKernel\EventListener\ErrorsLoggerListener.php";s:4:"line";i:37;s:6:"pretty";s:77:"Symfony\Component\HttpKernel\EventListener\ErrorsLoggerListener::injectLogger";}s:87:"kernel.controller.FOS\RestBundle\EventListener\ParamFetcherListener::onKernelController";a:7:{s:5:"event";s:17:"kernel.controller";s:4:"type";s:6:"Method";s:5:"class";s:49:"FOS\RestBundle\EventListener\ParamFetcherListener";s:6:"method";s:18:"onKernelController";s:4:"file";s:107:"C:\wamp\www\QCMV2\vendor\friendsofsymfony\rest-bundle\FOS\RestBundle\EventListener\ParamFetcherListener.php";s:4:"line";i:52;s:6:"pretty";s:69:"FOS\RestBundle\EventListener\ParamFetcherListener::onKernelController";}s:102:"kernel.controller.Symfony\Bundle\FrameworkBundle\DataCollector\RouterDataCollector::onKernelController";a:7:{s:5:"event";s:17:"kernel.controller";s:4:"type";s:6:"Method";s:5:"class";s:64:"Symfony\Bundle\FrameworkBundle\DataCollector\RouterDataCollector";s:6:"method";s:18:"onKernelController";s:4:"file";s:111:"C:\wamp\www\QCMV2\vendor\symfony\symfony\src\Symfony\Component\HttpKernel\DataCollector\RouterDataCollector.php";s:4:"line";i:66;s:6:"pretty";s:84:"Symfony\Bundle\FrameworkBundle\DataCollector\RouterDataCollector::onKernelController";}s:86:"kernel.controller.Acme\DemoBundle\EventListener\ControllerListener::onKernelController";a:7:{s:5:"event";s:17:"kernel.controller";s:4:"type";s:6:"Method";s:5:"class";s:48:"Acme\DemoBundle\EventListener\ControllerListener";s:6:"method";s:18:"onKernelController";s:4:"file";s:74:"C:\wamp\www\QCMV2\src\Acme\DemoBundle\EventListener\ControllerListener.php";s:4:"line";i:18;s:6:"pretty";s:68:"Acme\DemoBundle\EventListener\ControllerListener::onKernelController";}s:101:"kernel.controller.Symfony\Component\HttpKernel\DataCollector\RequestDataCollector::onKernelController";a:7:{s:5:"event";s:17:"kernel.controller";s:4:"type";s:6:"Method";s:5:"class";s:63:"Symfony\Component\HttpKernel\DataCollector\RequestDataCollector";s:6:"method";s:18:"onKernelController";s:4:"file";s:112:"C:\wamp\www\QCMV2\vendor\symfony\symfony\src\Symfony\Component\HttpKernel\DataCollector\RequestDataCollector.php";s:4:"line";i:273;s:6:"pretty";s:83:"Symfony\Component\HttpKernel\DataCollector\RequestDataCollector::onKernelController";}s:105:"kernel.controller.Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener::onKernelController";a:7:{s:5:"event";s:17:"kernel.controller";s:4:"type";s:6:"Method";s:5:"class";s:67:"Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener";s:6:"method";s:18:"onKernelController";s:4:"file";s:43:"C:\wamp\www\QCMV2\app\cache\dev\classes.php";s:4:"line";i:6460;s:6:"pretty";s:87:"Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener::onKernelController";}s:109:"kernel.controller.Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener::onKernelController";a:7:{s:5:"event";s:17:"kernel.controller";s:4:"type";s:6:"Method";s:5:"class";s:71:"Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener";s:6:"method";s:18:"onKernelController";s:4:"file";s:43:"C:\wamp\www\QCMV2\app\cache\dev\classes.php";s:4:"line";i:6533;s:6:"pretty";s:91:"Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener::onKernelController";}s:104:"kernel.controller.Sensio\Bundle\FrameworkExtraBundle\EventListener\HttpCacheListener::onKernelController";a:7:{s:5:"event";s:17:"kernel.controller";s:4:"type";s:6:"Method";s:5:"class";s:66:"Sensio\Bundle\FrameworkExtraBundle\EventListener\HttpCacheListener";s:6:"method";s:18:"onKernelController";s:4:"file";s:43:"C:\wamp\www\QCMV2\app\cache\dev\classes.php";s:4:"line";i:6894;s:6:"pretty";s:86:"Sensio\Bundle\FrameworkExtraBundle\EventListener\HttpCacheListener::onKernelController";}s:103:"kernel.controller.Sensio\Bundle\FrameworkExtraBundle\EventListener\SecurityListener::onKernelController";a:7:{s:5:"event";s:17:"kernel.controller";s:4:"type";s:6:"Method";s:5:"class";s:65:"Sensio\Bundle\FrameworkExtraBundle\EventListener\SecurityListener";s:6:"method";s:18:"onKernelController";s:4:"file";s:43:"C:\wamp\www\QCMV2\app\cache\dev\classes.php";s:4:"line";i:7018;s:6:"pretty";s:85:"Sensio\Bundle\FrameworkExtraBundle\EventListener\SecurityListener::onKernelController";}s:87:"kernel.controller.FOS\RestBundle\EventListener\ViewResponseListener::onKernelController";a:7:{s:5:"event";s:17:"kernel.controller";s:4:"type";s:6:"Method";s:5:"class";s:49:"FOS\RestBundle\EventListener\ViewResponseListener";s:6:"method";s:18:"onKernelController";s:4:"file";s:107:"C:\wamp\www\QCMV2\vendor\friendsofsymfony\rest-bundle\FOS\RestBundle\EventListener\ViewResponseListener.php";s:4:"line";i:40;s:6:"pretty";s:69:"FOS\RestBundle\EventListener\ViewResponseListener::onKernelController";}s:79:"kernel.response.Symfony\Bridge\Monolog\Handler\FirePHPHandler::onKernelResponse";a:7:{s:5:"event";s:15:"kernel.response";s:4:"type";s:6:"Method";s:5:"class";s:45:"Symfony\Bridge\Monolog\Handler\FirePHPHandler";s:6:"method";s:16:"onKernelResponse";s:4:"file";s:94:"C:\wamp\www\QCMV2\vendor\symfony\symfony\src\Symfony\Bridge\Monolog\Handler\FirePHPHandler.php";s:4:"line";i:39;s:6:"pretty";s:63:"Symfony\Bridge\Monolog\Handler\FirePHPHandler::onKernelResponse";}s:81:"kernel.response.Symfony\Bridge\Monolog\Handler\ChromePhpHandler::onKernelResponse";a:7:{s:5:"event";s:15:"kernel.response";s:4:"type";s:6:"Method";s:5:"class";s:47:"Symfony\Bridge\Monolog\Handler\ChromePhpHandler";s:6:"method";s:16:"onKernelResponse";s:4:"file";s:96:"C:\wamp\www\QCMV2\vendor\symfony\symfony\src\Symfony\Bridge\Monolog\Handler\ChromePhpHandler.php";s:4:"line";i:39;s:6:"pretty";s:65:"Symfony\Bridge\Monolog\Handler\ChromePhpHandler::onKernelResponse";}s:93:"kernel.response.Symfony\Component\HttpKernel\EventListener\ResponseListener::onKernelResponse";a:7:{s:5:"event";s:15:"kernel.response";s:4:"type";s:6:"Method";s:5:"class";s:59:"Symfony\Component\HttpKernel\EventListener\ResponseListener";s:6:"method";s:16:"onKernelResponse";s:4:"file";s:43:"C:\wamp\www\QCMV2\app\cache\dev\classes.php";s:4:"line";i:1816;s:6:"pretty";s:77:"Symfony\Component\HttpKernel\EventListener\ResponseListener::onKernelResponse";}s:93:"kernel.response.Symfony\Component\Security\Http\RememberMe\ResponseListener::onKernelResponse";a:7:{s:5:"event";s:15:"kernel.response";s:4:"type";s:6:"Method";s:5:"class";s:59:"Symfony\Component\Security\Http\RememberMe\ResponseListener";s:6:"method";s:16:"onKernelResponse";s:4:"file";s:108:"C:\wamp\www\QCMV2\vendor\symfony\symfony\src\Symfony\Component\Security\Http\RememberMe\ResponseListener.php";s:4:"line";i:29;s:6:"pretty";s:77:"Symfony\Component\Security\Http\RememberMe\ResponseListener::onKernelResponse";}s:100:"kernel.response.Sensio\Bundle\FrameworkExtraBundle\EventListener\HttpCacheListener::onKernelResponse";a:7:{s:5:"event";s:15:"kernel.response";s:4:"type";s:6:"Method";s:5:"class";s:66:"Sensio\Bundle\FrameworkExtraBundle\EventListener\HttpCacheListener";s:6:"method";s:16:"onKernelResponse";s:4:"file";s:43:"C:\wamp\www\QCMV2\app\cache\dev\classes.php";s:4:"line";i:6924;s:6:"pretty";s:84:"Sensio\Bundle\FrameworkExtraBundle\EventListener\HttpCacheListener::onKernelResponse";}s:93:"kernel.response.Symfony\Component\HttpKernel\EventListener\ProfilerListener::onKernelResponse";a:7:{s:5:"event";s:15:"kernel.response";s:4:"type";s:6:"Method";s:5:"class";s:59:"Symfony\Component\HttpKernel\EventListener\ProfilerListener";s:6:"method";s:16:"onKernelResponse";s:4:"file";s:108:"C:\wamp\www\QCMV2\vendor\symfony\symfony\src\Symfony\Component\HttpKernel\EventListener\ProfilerListener.php";s:4:"line";i:82;s:6:"pretty";s:77:"Symfony\Component\HttpKernel\EventListener\ProfilerListener::onKernelResponse";}s:104:"kernel.response.Symfony\Bundle\WebProfilerBundle\EventListener\WebDebugToolbarListener::onKernelResponse";a:7:{s:5:"event";s:15:"kernel.response";s:4:"type";s:6:"Method";s:5:"class";s:70:"Symfony\Bundle\WebProfilerBundle\EventListener\WebDebugToolbarListener";s:6:"method";s:16:"onKernelResponse";s:4:"file";s:119:"C:\wamp\www\QCMV2\vendor\symfony\symfony\src\Symfony\Bundle\WebProfilerBundle\EventListener\WebDebugToolbarListener.php";s:4:"line";i:54;s:6:"pretty";s:88:"Symfony\Bundle\WebProfilerBundle\EventListener\WebDebugToolbarListener::onKernelResponse";}s:96:"kernel.response.Symfony\Component\HttpKernel\EventListener\SaveSessionListener::onKernelResponse";a:7:{s:5:"event";s:15:"kernel.response";s:4:"type";s:6:"Method";s:5:"class";s:62:"Symfony\Component\HttpKernel\EventListener\SaveSessionListener";s:6:"method";s:16:"onKernelResponse";s:4:"file";s:111:"C:\wamp\www\QCMV2\vendor\symfony\symfony\src\Symfony\Component\HttpKernel\EventListener\SaveSessionListener.php";s:4:"line";i:48;s:6:"pretty";s:80:"Symfony\Component\HttpKernel\EventListener\SaveSessionListener::onKernelResponse";}s:101:"kernel.response.Symfony\Component\HttpKernel\EventListener\StreamedResponseListener::onKernelResponse";a:7:{s:5:"event";s:15:"kernel.response";s:4:"type";s:6:"Method";s:5:"class";s:67:"Symfony\Component\HttpKernel\EventListener\StreamedResponseListener";s:6:"method";s:16:"onKernelResponse";s:4:"file";s:116:"C:\wamp\www\QCMV2\vendor\symfony\symfony\src\Symfony\Component\HttpKernel\EventListener\StreamedResponseListener.php";s:4:"line";i:33;s:6:"pretty";s:85:"Symfony\Component\HttpKernel\EventListener\StreamedResponseListener::onKernelResponse";}s:96:"kernel.terminate.Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener::onTerminate";a:7:{s:5:"event";s:16:"kernel.terminate";s:4:"type";s:6:"Method";s:5:"class";s:66:"Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener";s:6:"method";s:11:"onTerminate";s:4:"file";s:89:"C:\wamp\www\QCMV2\vendor\symfony\swiftmailer-bundle\EventListener\EmailSenderListener.php";s:4:"line";i:46;s:6:"pretty";s:79:"Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener::onTerminate";}}s:20:"not_called_listeners";a:16:{s:75:"kernel.view.FOS\RestBundle\EventListener\ViewResponseListener::onKernelView";a:7:{s:5:"event";s:11:"kernel.view";s:4:"type";s:6:"Method";s:5:"class";s:49:"FOS\RestBundle\EventListener\ViewResponseListener";s:6:"method";s:12:"onKernelView";s:4:"file";s:107:"C:\wamp\www\QCMV2\vendor\friendsofsymfony\rest-bundle\FOS\RestBundle\EventListener\ViewResponseListener.php";s:4:"line";i:61;s:6:"pretty";s:63:"FOS\RestBundle\EventListener\ViewResponseListener::onKernelView";}s:97:"console.terminate.Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener::onTerminate";a:7:{s:5:"event";s:17:"console.terminate";s:4:"type";s:6:"Method";s:5:"class";s:66:"Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener";s:6:"method";s:11:"onTerminate";s:4:"file";s:89:"C:\wamp\www\QCMV2\vendor\symfony\swiftmailer-bundle\EventListener\EmailSenderListener.php";s:4:"line";i:46;s:6:"pretty";s:79:"Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener::onTerminate";}s:96:"fos_user.security.implicit_login.FOS\UserBundle\EventListener\LastLoginListener::onImplicitLogin";a:7:{s:5:"event";s:32:"fos_user.security.implicit_login";s:4:"type";s:6:"Method";s:5:"class";s:46:"FOS\UserBundle\EventListener\LastLoginListener";s:6:"method";s:15:"onImplicitLogin";s:4:"file";s:89:"C:\wamp\www\QCMV2\vendor\friendsofsymfony\user-bundle\EventListener\LastLoginListener.php";s:4:"line";i:39;s:6:"pretty";s:63:"FOS\UserBundle\EventListener\LastLoginListener::onImplicitLogin";}s:101:"security.interactive_login.FOS\UserBundle\EventListener\LastLoginListener::onSecurityInteractiveLogin";a:7:{s:5:"event";s:26:"security.interactive_login";s:4:"type";s:6:"Method";s:5:"class";s:46:"FOS\UserBundle\EventListener\LastLoginListener";s:6:"method";s:26:"onSecurityInteractiveLogin";s:4:"file";s:89:"C:\wamp\www\QCMV2\vendor\friendsofsymfony\user-bundle\EventListener\LastLoginListener.php";s:4:"line";i:47;s:6:"pretty";s:74:"FOS\UserBundle\EventListener\LastLoginListener::onSecurityInteractiveLogin";}s:97:"fos_user.registration.completed.FOS\UserBundle\EventListener\AuthenticationListener::authenticate";a:7:{s:5:"event";s:31:"fos_user.registration.completed";s:4:"type";s:6:"Method";s:5:"class";s:51:"FOS\UserBundle\EventListener\AuthenticationListener";s:6:"method";s:12:"authenticate";s:4:"file";s:94:"C:\wamp\www\QCMV2\vendor\friendsofsymfony\user-bundle\EventListener\AuthenticationListener.php";s:4:"line";i:42;s:6:"pretty";s:65:"FOS\UserBundle\EventListener\AuthenticationListener::authenticate";}s:91:"fos_user.registration.completed.FOS\UserBundle\EventListener\FlashListener::addSuccessFlash";a:7:{s:5:"event";s:31:"fos_user.registration.completed";s:4:"type";s:6:"Method";s:5:"class";s:42:"FOS\UserBundle\EventListener\FlashListener";s:6:"method";s:15:"addSuccessFlash";s:4:"file";s:85:"C:\wamp\www\QCMV2\vendor\friendsofsymfony\user-bundle\EventListener\FlashListener.php";s:4:"line";i:54;s:6:"pretty";s:59:"FOS\UserBundle\EventListener\FlashListener::addSuccessFlash";}s:97:"fos_user.registration.confirmed.FOS\UserBundle\EventListener\AuthenticationListener::authenticate";a:7:{s:5:"event";s:31:"fos_user.registration.confirmed";s:4:"type";s:6:"Method";s:5:"class";s:51:"FOS\UserBundle\EventListener\AuthenticationListener";s:6:"method";s:12:"authenticate";s:4:"file";s:94:"C:\wamp\www\QCMV2\vendor\friendsofsymfony\user-bundle\EventListener\AuthenticationListener.php";s:4:"line";i:42;s:6:"pretty";s:65:"FOS\UserBundle\EventListener\AuthenticationListener::authenticate";}s:100:"fos_user.resetting.reset.completed.FOS\UserBundle\EventListener\AuthenticationListener::authenticate";a:7:{s:5:"event";s:34:"fos_user.resetting.reset.completed";s:4:"type";s:6:"Method";s:5:"class";s:51:"FOS\UserBundle\EventListener\AuthenticationListener";s:6:"method";s:12:"authenticate";s:4:"file";s:94:"C:\wamp\www\QCMV2\vendor\friendsofsymfony\user-bundle\EventListener\AuthenticationListener.php";s:4:"line";i:42;s:6:"pretty";s:65:"FOS\UserBundle\EventListener\AuthenticationListener::authenticate";}s:94:"fos_user.resetting.reset.completed.FOS\UserBundle\EventListener\FlashListener::addSuccessFlash";a:7:{s:5:"event";s:34:"fos_user.resetting.reset.completed";s:4:"type";s:6:"Method";s:5:"class";s:42:"FOS\UserBundle\EventListener\FlashListener";s:6:"method";s:15:"addSuccessFlash";s:4:"file";s:85:"C:\wamp\www\QCMV2\vendor\friendsofsymfony\user-bundle\EventListener\FlashListener.php";s:4:"line";i:54;s:6:"pretty";s:59:"FOS\UserBundle\EventListener\FlashListener::addSuccessFlash";}s:99:"fos_user.change_password.edit.completed.FOS\UserBundle\EventListener\FlashListener::addSuccessFlash";a:7:{s:5:"event";s:39:"fos_user.change_password.edit.completed";s:4:"type";s:6:"Method";s:5:"class";s:42:"FOS\UserBundle\EventListener\FlashListener";s:6:"method";s:15:"addSuccessFlash";s:4:"file";s:85:"C:\wamp\www\QCMV2\vendor\friendsofsymfony\user-bundle\EventListener\FlashListener.php";s:4:"line";i:54;s:6:"pretty";s:59:"FOS\UserBundle\EventListener\FlashListener::addSuccessFlash";}s:91:"fos_user.group.create.completed.FOS\UserBundle\EventListener\FlashListener::addSuccessFlash";a:7:{s:5:"event";s:31:"fos_user.group.create.completed";s:4:"type";s:6:"Method";s:5:"class";s:42:"FOS\UserBundle\EventListener\FlashListener";s:6:"method";s:15:"addSuccessFlash";s:4:"file";s:85:"C:\wamp\www\QCMV2\vendor\friendsofsymfony\user-bundle\EventListener\FlashListener.php";s:4:"line";i:54;s:6:"pretty";s:59:"FOS\UserBundle\EventListener\FlashListener::addSuccessFlash";}s:91:"fos_user.group.delete.completed.FOS\UserBundle\EventListener\FlashListener::addSuccessFlash";a:7:{s:5:"event";s:31:"fos_user.group.delete.completed";s:4:"type";s:6:"Method";s:5:"class";s:42:"FOS\UserBundle\EventListener\FlashListener";s:6:"method";s:15:"addSuccessFlash";s:4:"file";s:85:"C:\wamp\www\QCMV2\vendor\friendsofsymfony\user-bundle\EventListener\FlashListener.php";s:4:"line";i:54;s:6:"pretty";s:59:"FOS\UserBundle\EventListener\FlashListener::addSuccessFlash";}s:89:"fos_user.group.edit.completed.FOS\UserBundle\EventListener\FlashListener::addSuccessFlash";a:7:{s:5:"event";s:29:"fos_user.group.edit.completed";s:4:"type";s:6:"Method";s:5:"class";s:42:"FOS\UserBundle\EventListener\FlashListener";s:6:"method";s:15:"addSuccessFlash";s:4:"file";s:85:"C:\wamp\www\QCMV2\vendor\friendsofsymfony\user-bundle\EventListener\FlashListener.php";s:4:"line";i:54;s:6:"pretty";s:59:"FOS\UserBundle\EventListener\FlashListener::addSuccessFlash";}s:91:"fos_user.profile.edit.completed.FOS\UserBundle\EventListener\FlashListener::addSuccessFlash";a:7:{s:5:"event";s:31:"fos_user.profile.edit.completed";s:4:"type";s:6:"Method";s:5:"class";s:42:"FOS\UserBundle\EventListener\FlashListener";s:6:"method";s:15:"addSuccessFlash";s:4:"file";s:85:"C:\wamp\www\QCMV2\vendor\friendsofsymfony\user-bundle\EventListener\FlashListener.php";s:4:"line";i:54;s:6:"pretty";s:59:"FOS\UserBundle\EventListener\FlashListener::addSuccessFlash";}s:110:"fos_user.resetting.reset.initialize.FOS\UserBundle\EventListener\ResettingListener::onResettingResetInitialize";a:7:{s:5:"event";s:35:"fos_user.resetting.reset.initialize";s:4:"type";s:6:"Method";s:5:"class";s:46:"FOS\UserBundle\EventListener\ResettingListener";s:6:"method";s:26:"onResettingResetInitialize";s:4:"file";s:89:"C:\wamp\www\QCMV2\vendor\friendsofsymfony\user-bundle\EventListener\ResettingListener.php";s:4:"line";i:40;s:6:"pretty";s:74:"FOS\UserBundle\EventListener\ResettingListener::onResettingResetInitialize";}s:104:"fos_user.resetting.reset.success.FOS\UserBundle\EventListener\ResettingListener::onResettingResetSuccess";a:7:{s:5:"event";s:32:"fos_user.resetting.reset.success";s:4:"type";s:6:"Method";s:5:"class";s:46:"FOS\UserBundle\EventListener\ResettingListener";s:6:"method";s:23:"onResettingResetSuccess";s:4:"file";s:89:"C:\wamp\www\QCMV2\vendor\friendsofsymfony\user-bundle\EventListener\ResettingListener.php";s:4:"line";i:47;s:6:"pretty";s:71:"FOS\UserBundle\EventListener\ResettingListener::onResettingResetSuccess";}}}}s:6:"logger";C:62:"Symfony\Component\HttpKernel\DataCollector\LoggerDataCollector":18016:{a:3:{s:11:"error_count";i:1;s:4:"logs";a:57:{i:0;a:5:{s:9:"timestamp";i:1508325703;s:7:"message";s:108:"Notified event "kernel.request" to listener "Nelmio\CorsBundle\EventListener\CorsListener::onKernelRequest".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}}i:1;a:5:{s:9:"timestamp";i:1508325703;s:7:"message";s:123:"Notified event "kernel.request" to listener "Symfony\Component\HttpKernel\EventListener\ProfilerListener::onKernelRequest".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}}i:2;a:5:{s:9:"timestamp";i:1508325703;s:7:"message";s:124:"Notified event "kernel.request" to listener "Symfony\Bundle\FrameworkBundle\EventListener\SessionListener::onKernelRequest".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}}i:3;a:5:{s:9:"timestamp";i:1508325703;s:7:"message";s:123:"Notified event "kernel.request" to listener "Symfony\Component\HttpKernel\EventListener\FragmentListener::onKernelRequest".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}}i:4;a:5:{s:9:"timestamp";i:1508325703;s:7:"message";s:121:"Notified event "kernel.request" to listener "Symfony\Component\HttpKernel\EventListener\RouterListener::onKernelRequest".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}}i:5;a:5:{s:9:"timestamp";i:1508325703;s:7:"message";s:127:"Notified event "kernel.exception" to listener "Symfony\Component\HttpKernel\EventListener\ProfilerListener::onKernelException".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}}i:6;a:5:{s:9:"timestamp";i:1508325703;s:7:"message";s:128:"Notified event "kernel.exception" to listener "Symfony\Component\HttpKernel\EventListener\ExceptionListener::onKernelException".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}}i:7;a:5:{s:9:"timestamp";i:1508325703;s:7:"message";s:296:"Uncaught PHP Exception Symfony\Component\Filesystem\Exception\IOException: "Cannot rename "C:\wamp\www\QCMV2\app\cache\dev\appADF6.tmp" to "C:\wamp\www\QCMV2\app\cache\dev/appDevUrlMatcher.php"." at C:\wamp\www\QCMV2\vendor\symfony\symfony\src\Symfony\Component\Filesystem\Filesystem.php line 264";s:8:"priority";i:500;s:12:"priorityName";s:8:"CRITICAL";s:7:"context";a:1:{s:9:"exception";s:58:"Object(Symfony\Component\Filesystem\Exception\IOException)";}}i:8;a:5:{s:9:"timestamp";i:1508325703;s:7:"message";s:54:"Notified event "kernel.request" to listener "closure".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}}i:9;a:5:{s:9:"timestamp";i:1508325703;s:7:"message";s:108:"Notified event "kernel.request" to listener "Nelmio\CorsBundle\EventListener\CorsListener::onKernelRequest".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}}i:10;a:5:{s:9:"timestamp";i:1508325703;s:7:"message";s:54:"Notified event "kernel.request" to listener "closure".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}}i:11;a:5:{s:9:"timestamp";i:1508325703;s:7:"message";s:123:"Notified event "kernel.request" to listener "Symfony\Component\HttpKernel\EventListener\ProfilerListener::onKernelRequest".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}}i:12;a:5:{s:9:"timestamp";i:1508325703;s:7:"message";s:54:"Notified event "kernel.request" to listener "closure".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}}i:13;a:5:{s:9:"timestamp";i:1508325703;s:7:"message";s:124:"Notified event "kernel.request" to listener "Symfony\Bundle\FrameworkBundle\EventListener\SessionListener::onKernelRequest".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}}i:14;a:5:{s:9:"timestamp";i:1508325703;s:7:"message";s:54:"Notified event "kernel.request" to listener "closure".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}}i:15;a:5:{s:9:"timestamp";i:1508325703;s:7:"message";s:123:"Notified event "kernel.request" to listener "Symfony\Component\HttpKernel\EventListener\FragmentListener::onKernelRequest".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}}i:16;a:5:{s:9:"timestamp";i:1508325703;s:7:"message";s:54:"Notified event "kernel.request" to listener "closure".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}}i:17;a:5:{s:9:"timestamp";i:1508325703;s:7:"message";s:121:"Notified event "kernel.request" to listener "Symfony\Component\HttpKernel\EventListener\RouterListener::onKernelRequest".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}}i:18;a:5:{s:9:"timestamp";i:1508325703;s:7:"message";s:54:"Notified event "kernel.request" to listener "closure".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}}i:19;a:5:{s:9:"timestamp";i:1508325703;s:7:"message";s:121:"Notified event "kernel.request" to listener "Symfony\Component\HttpKernel\EventListener\LocaleListener::onKernelRequest".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}}i:20;a:5:{s:9:"timestamp";i:1508325703;s:7:"message";s:54:"Notified event "kernel.request" to listener "closure".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}}i:21;a:5:{s:9:"timestamp";i:1508325703;s:7:"message";s:105:"Notified event "kernel.request" to listener "FOS\RestBundle\EventListener\BodyListener::onKernelRequest".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}}i:22;a:5:{s:9:"timestamp";i:1508325703;s:7:"message";s:54:"Notified event "kernel.request" to listener "closure".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}}i:23;a:5:{s:9:"timestamp";i:1508325703;s:7:"message";s:104:"Notified event "kernel.request" to listener "Symfony\Component\Security\Http\Firewall::onKernelRequest".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}}i:24;a:5:{s:9:"timestamp";i:1508325703;s:7:"message";s:54:"Notified event "kernel.request" to listener "closure".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}}i:25;a:5:{s:9:"timestamp";i:1508325703;s:7:"message";s:122:"Notified event "kernel.request" to listener "Symfony\Bundle\AsseticBundle\EventListener\RequestListener::onKernelRequest".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}}i:26;a:5:{s:9:"timestamp";i:1508325703;s:7:"message";s:54:"Notified event "kernel.request" to listener "closure".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}}i:27;a:5:{s:9:"timestamp";i:1508325703;s:7:"message";s:124:"Notified event "kernel.request" to listener "Symfony\Component\HttpKernel\EventListener\ErrorsLoggerListener::injectLogger".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}}i:28;a:5:{s:9:"timestamp";i:1508325703;s:7:"message";s:54:"Notified event "kernel.request" to listener "closure".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}}i:29;a:5:{s:9:"timestamp";i:1508325703;s:7:"message";s:124:"Notified event "kernel.request" to listener "Symfony\Component\HttpKernel\EventListener\ErrorsLoggerListener::injectLogger".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}}i:30;a:5:{s:9:"timestamp";i:1508325704;s:7:"message";s:119:"Notified event "kernel.controller" to listener "FOS\RestBundle\EventListener\ParamFetcherListener::onKernelController".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}}i:31;a:5:{s:9:"timestamp";i:1508325704;s:7:"message";s:209:"Support of Symfony\Component\HttpFoundation\Request in FOS\RestBundle\Request\ParamFetcher is deprecated since version 1.7 and will be removed in 2.0. Use Symfony\Component\HttpFoundation\RequestStack instead.";s:8:"priority";i:300;s:12:"priorityName";s:7:"WARNING";s:7:"context";a:2:{s:4:"type";i:-100;s:5:"stack";a:10:{i:0;a:3:{s:8:"function";s:6:"handle";s:5:"class";s:36:"Symfony\Component\Debug\ErrorHandler";s:4:"type";s:2:"->";}i:1;a:3:{s:4:"file";s:93:"C:\wamp\www\QCMV2\vendor\friendsofsymfony\rest-bundle\FOS\RestBundle\Request\ParamFetcher.php";s:4:"line";i:61;s:8:"function";s:13:"trigger_error";}i:2;a:5:{s:4:"file";s:63:"C:\wamp\www\QCMV2\app\cache\dev\appDevDebugProjectContainer.php";s:4:"line";i:1544;s:8:"function";s:11:"__construct";s:5:"class";s:35:"FOS\RestBundle\Request\ParamFetcher";s:4:"type";s:2:"->";}i:3;a:5:{s:4:"file";s:41:"C:\wamp\www\QCMV2\app\bootstrap.php.cache";s:4:"line";i:2069;s:8:"function";s:38:"getFosRest_Request_ParamFetcherService";s:5:"class";s:27:"appDevDebugProjectContainer";s:4:"type";s:2:"->";}i:4;a:5:{s:4:"file";s:107:"C:\wamp\www\QCMV2\vendor\friendsofsymfony\rest-bundle\FOS\RestBundle\EventListener\ParamFetcherListener.php";s:4:"line";i:60;s:8:"function";s:3:"get";s:5:"class";s:47:"Symfony\Component\DependencyInjection\Container";s:4:"type";s:2:"->";}i:5;a:3:{s:8:"function";s:18:"onKernelController";s:5:"class";s:49:"FOS\RestBundle\EventListener\ParamFetcherListener";s:4:"type";s:2:"->";}i:6;a:3:{s:4:"file";s:108:"C:\wamp\www\QCMV2\vendor\symfony\symfony\src\Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher.php";s:4:"line";i:476;s:8:"function";s:14:"call_user_func";}i:7;a:3:{s:8:"function";s:44:"Symfony\Component\HttpKernel\Debug\{closure}";s:5:"class";s:59:"Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher";s:4:"type";s:2:"->";}i:8;a:3:{s:4:"file";s:43:"C:\wamp\www\QCMV2\app\cache\dev\classes.php";s:4:"line";i:1691;s:8:"function";s:14:"call_user_func";}i:9;a:5:{s:4:"file";s:43:"C:\wamp\www\QCMV2\app\cache\dev\classes.php";s:4:"line";i:1617;s:8:"function";s:10:"doDispatch";s:5:"class";s:49:"Symfony\Component\EventDispatcher\EventDispatcher";s:4:"type";s:2:"->";}}}}i:32;a:5:{s:9:"timestamp";i:1508325704;s:7:"message";s:134:"Notified event "kernel.controller" to listener "Symfony\Bundle\FrameworkBundle\DataCollector\RouterDataCollector::onKernelController".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}}i:33;a:5:{s:9:"timestamp";i:1508325704;s:7:"message";s:118:"Notified event "kernel.controller" to listener "Acme\DemoBundle\EventListener\ControllerListener::onKernelController".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}}i:34;a:5:{s:9:"timestamp";i:1508325704;s:7:"message";s:133:"Notified event "kernel.controller" to listener "Symfony\Component\HttpKernel\DataCollector\RequestDataCollector::onKernelController".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}}i:35;a:5:{s:9:"timestamp";i:1508325704;s:7:"message";s:137:"Notified event "kernel.controller" to listener "Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener::onKernelController".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}}i:36;a:5:{s:9:"timestamp";i:1508325704;s:7:"message";s:141:"Notified event "kernel.controller" to listener "Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener::onKernelController".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}}i:37;a:5:{s:9:"timestamp";i:1508325704;s:7:"message";s:136:"Notified event "kernel.controller" to listener "Sensio\Bundle\FrameworkExtraBundle\EventListener\HttpCacheListener::onKernelController".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}}i:38;a:5:{s:9:"timestamp";i:1508325704;s:7:"message";s:135:"Notified event "kernel.controller" to listener "Sensio\Bundle\FrameworkExtraBundle\EventListener\SecurityListener::onKernelController".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}}i:39;a:5:{s:9:"timestamp";i:1508325704;s:7:"message";s:119:"Notified event "kernel.controller" to listener "FOS\RestBundle\EventListener\ViewResponseListener::onKernelController".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}}i:40;a:5:{s:9:"timestamp";i:1508325704;s:7:"message";s:157:"Defining the getGlobals() method in the "assetic" extension without explicitly implementing Twig_Extension_GlobalsInterface is deprecated since version 1.23.";s:8:"priority";i:300;s:12:"priorityName";s:7:"WARNING";s:7:"context";a:2:{s:4:"type";i:-100;s:5:"stack";a:10:{i:0;a:3:{s:8:"function";s:6:"handle";s:5:"class";s:36:"Symfony\Component\Debug\ErrorHandler";s:4:"type";s:2:"->";}i:1;a:3:{s:4:"file";s:43:"C:\wamp\www\QCMV2\app\cache\dev\classes.php";s:4:"line";i:3528;s:8:"function";s:13:"trigger_error";}i:2;a:5:{s:4:"file";s:43:"C:\wamp\www\QCMV2\app\cache\dev\classes.php";s:4:"line";i:3489;s:8:"function";s:11:"initGlobals";s:5:"class";s:16:"Twig_Environment";s:4:"type";s:2:"->";}i:3;a:5:{s:4:"file";s:43:"C:\wamp\www\QCMV2\app\cache\dev\classes.php";s:4:"line";i:3495;s:8:"function";s:10:"getGlobals";s:5:"class";s:16:"Twig_Environment";s:4:"type";s:2:"->";}i:4;a:5:{s:4:"file";s:43:"C:\wamp\www\QCMV2\app\cache\dev\classes.php";s:4:"line";i:4847;s:8:"function";s:12:"mergeGlobals";s:5:"class";s:16:"Twig_Environment";s:4:"type";s:2:"->";}i:5;a:5:{s:4:"file";s:43:"C:\wamp\www\QCMV2\app\cache\dev\classes.php";s:4:"line";i:4854;s:8:"function";s:7:"display";s:5:"class";s:13:"Twig_Template";s:4:"type";s:2:"->";}i:6;a:5:{s:4:"file";s:43:"C:\wamp\www\QCMV2\app\cache\dev\classes.php";s:4:"line";i:2957;s:8:"function";s:6:"render";s:5:"class";s:13:"Twig_Template";s:4:"type";s:2:"->";}i:7;a:5:{s:4:"file";s:105:"C:\wamp\www\QCMV2\vendor\symfony\symfony\src\Symfony\Bundle\TwigBundle\Controller\ExceptionController.php";s:4:"line";i:63;s:8:"function";s:6:"render";s:5:"class";s:16:"Twig_Environment";s:4:"type";s:2:"->";}i:8;a:3:{s:8:"function";s:10:"showAction";s:5:"class";s:56:"Symfony\Bundle\TwigBundle\Controller\ExceptionController";s:4:"type";s:2:"->";}i:9;a:3:{s:4:"file";s:41:"C:\wamp\www\QCMV2\app\bootstrap.php.cache";s:4:"line";i:2978;s:8:"function";s:20:"call_user_func_array";}}}}i:41;a:5:{s:9:"timestamp";i:1508325706;s:7:"message";s:111:"Notified event "kernel.response" to listener "Symfony\Bridge\Monolog\Handler\FirePHPHandler::onKernelResponse".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}}i:42;a:5:{s:9:"timestamp";i:1508325706;s:7:"message";s:113:"Notified event "kernel.response" to listener "Symfony\Bridge\Monolog\Handler\ChromePhpHandler::onKernelResponse".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}}i:43;a:5:{s:9:"timestamp";i:1508325706;s:7:"message";s:125:"Notified event "kernel.response" to listener "Symfony\Component\HttpKernel\EventListener\ResponseListener::onKernelResponse".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}}i:44;a:5:{s:9:"timestamp";i:1508325706;s:7:"message";s:125:"Notified event "kernel.response" to listener "Symfony\Component\Security\Http\RememberMe\ResponseListener::onKernelResponse".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}}i:45;a:5:{s:9:"timestamp";i:1508325706;s:7:"message";s:132:"Notified event "kernel.response" to listener "Sensio\Bundle\FrameworkExtraBundle\EventListener\HttpCacheListener::onKernelResponse".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}}i:46;a:5:{s:9:"timestamp";i:1508325706;s:7:"message";s:125:"Notified event "kernel.response" to listener "Symfony\Component\HttpKernel\EventListener\ProfilerListener::onKernelResponse".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}}i:47;a:5:{s:9:"timestamp";i:1508325706;s:7:"message";s:136:"Notified event "kernel.response" to listener "Symfony\Bundle\WebProfilerBundle\EventListener\WebDebugToolbarListener::onKernelResponse".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}}i:48;a:5:{s:9:"timestamp";i:1508325706;s:7:"message";s:128:"Notified event "kernel.response" to listener "Symfony\Component\HttpKernel\EventListener\SaveSessionListener::onKernelResponse".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}}i:49;a:5:{s:9:"timestamp";i:1508325706;s:7:"message";s:133:"Notified event "kernel.response" to listener "Symfony\Component\HttpKernel\EventListener\StreamedResponseListener::onKernelResponse".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}}i:50;a:5:{s:9:"timestamp";i:1508325706;s:7:"message";s:143:"Listener "Symfony\Component\HttpKernel\EventListener\ExceptionListener::onKernelException" stopped propagation of the event "kernel.exception".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}}i:51;a:5:{s:9:"timestamp";i:1508325706;s:7:"message";s:111:"Notified event "kernel.response" to listener "Symfony\Bridge\Monolog\Handler\FirePHPHandler::onKernelResponse".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}}i:52;a:5:{s:9:"timestamp";i:1508325706;s:7:"message";s:113:"Notified event "kernel.response" to listener "Symfony\Bridge\Monolog\Handler\ChromePhpHandler::onKernelResponse".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}}i:53;a:5:{s:9:"timestamp";i:1508325706;s:7:"message";s:125:"Notified event "kernel.response" to listener "Symfony\Component\HttpKernel\EventListener\ResponseListener::onKernelResponse".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}}i:54;a:5:{s:9:"timestamp";i:1508325706;s:7:"message";s:125:"Notified event "kernel.response" to listener "Symfony\Component\Security\Http\RememberMe\ResponseListener::onKernelResponse".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}}i:55;a:5:{s:9:"timestamp";i:1508325706;s:7:"message";s:132:"Notified event "kernel.response" to listener "Sensio\Bundle\FrameworkExtraBundle\EventListener\HttpCacheListener::onKernelResponse".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}}i:56;a:5:{s:9:"timestamp";i:1508325706;s:7:"message";s:125:"Notified event "kernel.response" to listener "Symfony\Component\HttpKernel\EventListener\ProfilerListener::onKernelResponse".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}}}s:17:"deprecation_count";i:2;}}s:4:"time";C:60:"Symfony\Component\HttpKernel\DataCollector\TimeDataCollector":17294:{a:2:{s:10:"start_time";d:1508325702702.936767578125;s:6:"events";a:25:{s:11:"__section__";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:2:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:0;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:2865;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:29622272;}i:1;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:3082;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:3084;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:29884416;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1508325703271.800048828125;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:7:"default";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:14:"kernel.request";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:1:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:0;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:2866;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:29622272;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1508325703271.800048828125;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:7:"section";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:22:"kernel.request.loading";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:1:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:0;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:0;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:14942208;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1508325703271.800048828125;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:22:"event_listener_loading";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:44:"Nelmio\CorsBundle\EventListener\CorsListener";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:1:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:1;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:2;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:14942208;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1508325703271.800048828125;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:14:"event_listener";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:59:"Symfony\Component\HttpKernel\EventListener\ProfilerListener";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:3:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:2;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:2;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:14942208;}i:1;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:599;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:599;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:24117248;}i:2;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:2807;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:2829;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:29622272;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1508325703271.800048828125;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:14:"event_listener";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:60:"Symfony\Bundle\FrameworkBundle\EventListener\SessionListener";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:1:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:3;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:8;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:15204352;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1508325703271.800048828125;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:14:"event_listener";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:59:"Symfony\Component\HttpKernel\EventListener\FragmentListener";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:1:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:8;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:8;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:15204352;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1508325703271.800048828125;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:14:"event_listener";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:57:"Symfony\Component\HttpKernel\EventListener\RouterListener";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:1:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:9;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:2866;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:29622272;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1508325703271.800048828125;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:14:"event_listener";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:16:"kernel.exception";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:1:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:597;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:2802;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:29622272;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1508325703271.800048828125;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:7:"section";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:24:"kernel.exception.loading";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:1:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:598;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:598;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:24117248;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1508325703271.800048828125;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:22:"event_listener_loading";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:60:"Symfony\Component\HttpKernel\EventListener\ExceptionListener";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:1:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:600;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:2801;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:29622272;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1508325703271.800048828125;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:14:"event_listener";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:17:"__section__.child";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:1:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:637;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:2800;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:29622272;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1508325703271.800048828125;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:7:"section";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:15:"kernel.response";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:1:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:2802;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:2865;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:29622272;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1508325703271.800048828125;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:7:"section";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:23:"kernel.response.loading";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:1:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:2802;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:2802;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:29622272;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1508325703271.800048828125;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:22:"event_listener_loading";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:45:"Symfony\Bridge\Monolog\Handler\FirePHPHandler";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:1:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:2803;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:2803;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:29622272;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1508325703271.800048828125;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:14:"event_listener";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:47:"Symfony\Bridge\Monolog\Handler\ChromePhpHandler";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:1:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:2804;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:2804;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:29622272;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1508325703271.800048828125;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:14:"event_listener";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:59:"Symfony\Component\HttpKernel\EventListener\ResponseListener";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:1:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:2804;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:2804;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:29622272;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1508325703271.800048828125;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:14:"event_listener";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:59:"Symfony\Component\Security\Http\RememberMe\ResponseListener";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:1:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:2805;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:2806;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:29622272;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1508325703271.800048828125;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:14:"event_listener";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:66:"Sensio\Bundle\FrameworkExtraBundle\EventListener\HttpCacheListener";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:1:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:2806;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:2806;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:29622272;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1508325703271.800048828125;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:14:"event_listener";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:70:"Symfony\Bundle\WebProfilerBundle\EventListener\WebDebugToolbarListener";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:1:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:2830;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:2863;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:29622272;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1508325703271.800048828125;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:14:"event_listener";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:62:"Symfony\Component\HttpKernel\EventListener\SaveSessionListener";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:1:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:2864;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:2864;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:29622272;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1508325703271.800048828125;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:14:"event_listener";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:67:"Symfony\Component\HttpKernel\EventListener\StreamedResponseListener";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:1:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:2865;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:2865;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:29622272;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1508325703271.800048828125;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:14:"event_listener";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:16:"kernel.terminate";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:1:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:3082;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:3084;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:29884416;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1508325703271.800048828125;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:7:"section";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:24:"kernel.terminate.loading";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:1:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:3082;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:3082;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:29884416;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1508325703271.800048828125;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:22:"event_listener_loading";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:66:"Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:1:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:3083;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:3084;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:29884416;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1508325703271.800048828125;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:14:"event_listener";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}}}}s:6:"memory";C:62:"Symfony\Component\HttpKernel\DataCollector\MemoryDataCollector":62:{a:2:{s:6:"memory";i:34865152;s:12:"memory_limit";i:134217728;}}s:6:"router";C:64:"Symfony\Bundle\FrameworkBundle\DataCollector\RouterDataCollector":51:{a:3:{s:8:"redirect";b:0;s:3:"url";N;s:5:"route";N;}}s:11:"swiftmailer";C:67:"Symfony\Bundle\SwiftmailerBundle\DataCollector\MessageDataCollector":77:{a:3:{s:6:"mailer";a:0:{}s:12:"messageCount";i:0;s:13:"defaultMailer";s:0:"";}}s:8:"security";C:65:"Symfony\Bundle\SecurityBundle\DataCollector\SecurityDataCollector":106:{a:5:{s:7:"enabled";b:1;s:13:"authenticated";b:0;s:11:"token_class";N;s:4:"user";s:0:"";s:5:"roles";a:0:{}}}s:2:"db";C:66:"Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector":363:{a:5:{s:7:"queries";a:1:{s:7:"default";a:0:{}}s:11:"connections";a:1:{s:7:"default";s:32:"doctrine.dbal.default_connection";}s:8:"managers";a:1:{s:7:"default";s:35:"doctrine.orm.default_entity_manager";}s:8:"entities";a:1:{s:7:"default";a:2:{i:0;s:25:"FOS\UserBundle\Model\User";i:1;s:51:"Utilisateurs\UtilisateursBundle\Entity\Utilisateurs";}}s:6:"errors";a:0:{}}}}s:2:"ip";s:3:"::1";s:6:"method";s:3:"GET";s:3:"url";s:60:"http://localhost:8900/QCMV2/web/app_dev.php/admin/dashboard/";s:4:"time";i:1508325706;}